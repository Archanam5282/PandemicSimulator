.\" Man page generated from reStructuredText.
.
.TH "PANDEMIC_SIMULATOR" "1" "Oct 19, 2020" "" "pandemic_simulator"
.SH NAME
pandemic_simulator \- pandemic_simulator 
.
.nr rst2man-indent-level 0
.
.de1 rstReportMargin
\\$1 \\n[an-margin]
level \\n[rst2man-indent-level]
level margin: \\n[rst2man-indent\\n[rst2man-indent-level]]
-
\\n[rst2man-indent0]
\\n[rst2man-indent1]
\\n[rst2man-indent2]
..
.de1 INDENT
.\" .rstReportMargin pre:
. RS \\$1
. nr rst2man-indent\\n[rst2man-indent-level] \\n[an-margin]
. nr rst2man-indent-level +1
.\" .rstReportMargin post:
..
.de UNINDENT
. RE
.\" indent \\n[an-margin]
.\" old: \\n[rst2man-indent\\n[rst2man-indent-level]]
.nr rst2man-indent-level -1
.\" new: \\n[rst2man-indent\\n[rst2man-indent-level]]
.in \\n[rst2man-indent\\n[rst2man-indent-level]]u
..
.SH PYTHON API REFERENCE
.SS pandemic_simulator package
.SS Subpackages
.SS pandemic_simulator.data package
.SS Subpackages
.SS pandemic_simulator.data.interfaces package
.SS Submodules
.SS pandemic_simulator.data.interfaces.data_loader module
.INDENT 0.0
.TP
.B class pandemic_simulator.data.interfaces.data_loader.ExperimentDataLoader
Bases: \fBabc.ABC\fP
.sp
An interface for a data loader.
.INDENT 7.0
.TP
.B get_data() -> Sequence[pandemic_simulator.data.interfaces.data_loader.ExperimentResult]
Return data as a sequence of ExperimentResult instances
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class pandemic_simulator.data.interfaces.data_loader.ExperimentResult(sim_opts: pandemic_simulator.environment.simulator_opts.PandemicSimOpts, seeds: List[Union[int, NoneType]], obs_trajectories: pandemic_simulator.environment.interfaces.pandemic_observation.PandemicObservation, reward_trajectories: numpy.ndarray, strategy: Sequence[pandemic_simulator.data.interfaces.data_loader.StageSchedule], num_persons: int)
Bases: \fBobject\fP
.INDENT 7.0
.TP
.B num_persons: int
.UNINDENT
.INDENT 7.0
.TP
.B obs_trajectories: pandemic_simulator.environment.interfaces.pandemic_observation.PandemicObservation
.UNINDENT
.INDENT 7.0
.TP
.B reward_trajectories: numpy.ndarray
.UNINDENT
.INDENT 7.0
.TP
.B seeds: List[Optional[int]]
.UNINDENT
.INDENT 7.0
.TP
.B sim_opts: pandemic_simulator.environment.simulator_opts.PandemicSimOpts
.UNINDENT
.INDENT 7.0
.TP
.B strategy: Sequence[pandemic_simulator.data.interfaces.data_loader.StageSchedule]
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class pandemic_simulator.data.interfaces.data_loader.StageSchedule(stage: int, end_day: Union[int, NoneType] = None)
Bases: \fBobject\fP
.INDENT 7.0
.TP
.B end_day: Optional[int] = None
.UNINDENT
.INDENT 7.0
.TP
.B stage: int
.UNINDENT
.UNINDENT
.SS pandemic_simulator.data.interfaces.data_saver module
.INDENT 0.0
.TP
.B class pandemic_simulator.data.interfaces.data_saver.ExperimentDataSaver
Bases: \fBabc.ABC\fP
.sp
An interface for an experiment data saver.
.INDENT 7.0
.TP
.B begin(obs: pandemic_simulator.environment.interfaces.pandemic_observation.PandemicObservation) -> None
Begin a saving episode
.UNINDENT
.INDENT 7.0
.TP
.B close() -> None
Perform any closing operations.
.UNINDENT
.INDENT 7.0
.TP
.B finalize(**kwargs: Any) -> bool
Finalize saving the episode and return True if successful else False
.UNINDENT
.INDENT 7.0
.TP
.B record(obs: pandemic_simulator.environment.interfaces.pandemic_observation.PandemicObservation, reward: Optional[Union[numpy.ndarray, float]] = None) -> None
Record data from obs and optionally a reward
.UNINDENT
.UNINDENT
.SS Submodules
.SS pandemic_simulator.data.h5_data_loader module
.INDENT 0.0
.TP
.B class pandemic_simulator.data.h5_data_loader.H5DataLoader(filename: str, path: pathlib.Path = PosixPath(\(aq.\(aq))
Bases: \fBpandemic_simulator.data.interfaces.data_loader.ExperimentDataLoader\fP
.sp
Implement a H5 experiment data loader
.INDENT 7.0
.TP
.B get_data() -> Sequence[pandemic_simulator.data.interfaces.data_loader.ExperimentResult]
Return data as a sequence of ExperimentResult instances
.UNINDENT
.UNINDENT
.SS pandemic_simulator.data.h5_data_saver module
.INDENT 0.0
.TP
.B class pandemic_simulator.data.h5_data_saver.H5DataSaver(filename: str, path: pathlib.Path = PosixPath(\(aq.\(aq), overwrite: bool = False)
Bases: \fBpandemic_simulator.data.interfaces.data_saver.ExperimentDataSaver\fP
.sp
Implement a H5 experiment data saver
.INDENT 7.0
.TP
.B begin(obs: pandemic_simulator.environment.interfaces.pandemic_observation.PandemicObservation) -> None
Begin a saving episode
.UNINDENT
.INDENT 7.0
.TP
.B close() -> None
Perform any closing operations.
.UNINDENT
.INDENT 7.0
.TP
.B finalize(**kwargs: Any) -> bool
Finalize saving the episode and return True if successful else False
.UNINDENT
.INDENT 7.0
.TP
.B record(obs: pandemic_simulator.environment.interfaces.pandemic_observation.PandemicObservation, reward: Optional[Union[numpy.ndarray, float]] = None) -> None
Record data from obs and optionally a reward
.UNINDENT
.UNINDENT
.SS pandemic_simulator.environment package
.SS Subpackages
.SS pandemic_simulator.environment.contact_tracing package
.SS Submodules
.SS pandemic_simulator.environment.contact_tracing.max_slot_contact_tracer module
.INDENT 0.0
.TP
.B class pandemic_simulator.environment.contact_tracing.max_slot_contact_tracer.MaxSlotContactTracer(storage_slots: int = 5, time_slot_scale: int = 24)
Bases: \fBpandemic_simulator.environment.interfaces.contact_tracer.ContactTracer\fP
.sp
A max slot contact tracing app. In this app, contacts are discarded after the maximum storage slots are reached.
For example, if storage_slots is 5, and the time_slot_scale is 24 (a day), only the last 5 days of contacts
will be kept. Note that time_slot_scale is only used as a scale and it should be care of the user to
make sure that the contacts are added in a proper way (respecting that scale).
.INDENT 7.0
.TP
.B add_contacts(contacts: orderedset._orderedset.OrderedSet) -> None
Adds a trace of contacts obtained at a given time.
.INDENT 7.0
.TP
.B Parameters
\fBcontacts\fP \-\- Contacts to add.
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B get_contacts(person_id: pandemic_simulator.environment.interfaces.ids.PersonID) -> Mapping[pandemic_simulator.environment.interfaces.ids.PersonID, numpy.ndarray]
Get a trace for
.INDENT 7.0
.TP
.B Parameters
\fBperson_id\fP \-\- Person\(aqs id to trace.
.TP
.B Returns
Mapping from each contact\(aqs id to a numpy array of floats between 0 and 1, representing
.UNINDENT
.sp
the contact hours scaled on a day (24 hours). The length of the sequence depends on the number of days for
data conservation.
.UNINDENT
.INDENT 7.0
.TP
.B new_time_slot() -> None
Adds a new time slot to the contact tracing (e.g., a new day, or a new hour, depending on the granularity).
.UNINDENT
.INDENT 7.0
.TP
.B reset() -> None
Resets the traces.
.UNINDENT
.UNINDENT
.SS pandemic_simulator.environment.infection_model package
.SS Submodules
.SS pandemic_simulator.environment.infection_model.seir_infection_model module
.INDENT 0.0
.TP
.B class pandemic_simulator.environment.infection_model.seir_infection_model.SEIRInfectionState(summary: pandemic_simulator.environment.interfaces.infection_model.InfectionSummary, spread_probability: float, is_hospitalized: bool = False, shows_symptoms: bool = False, label: pandemic_simulator.environment.infection_model.seir_infection_model._SEIRLabel = <factory>)
Bases: \fBpandemic_simulator.environment.interfaces.infection_model.IndividualInfectionState\fP
.sp
State of the infection according to SEIR.
.INDENT 7.0
.TP
.B label: pandemic_simulator.environment.infection_model.seir_infection_model._SEIRLabel
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class pandemic_simulator.environment.infection_model.seir_infection_model.SEIRModel(symp_proportion: float = 0.57, exposed_rate: Optional[float] = None, pre_asymp_rate: float = 0.4347826086956522, pre_symp_rate: float = 0.4347826086956522, recovery_rate_asymp: Optional[float] = None, recovery_rate_symp_non_treated: Optional[float] = None, recovery_rate_needs_hosp: float = 0.0214286, recovery_rate_hosp: Optional[float] = None, hosp_rate_symp: Optional[Dict[Tuple[pandemic_simulator.environment.infection_model.seir_infection_model._AgeLimit, pandemic_simulator.environment.interfaces.infection_model.Risk], float]] = None, death_rate_hosp: Optional[Dict[Tuple[pandemic_simulator.environment.infection_model.seir_infection_model._AgeLimit, pandemic_simulator.environment.interfaces.infection_model.Risk], float]] = None, death_rate_needs_hosp: Optional[Dict[Tuple[pandemic_simulator.environment.infection_model.seir_infection_model._AgeLimit, pandemic_simulator.environment.interfaces.infection_model.Risk], float]] = None, from_symp_to_hosp_rate: float = 0.1695, from_needs_hosp_to_death_rate: float = 0.3, from_hosp_to_death_rate: Optional[float] = None, spread_probability_params: Optional[pandemic_simulator.environment.infection_model.seir_infection_model.SpreadProbabilityParams] = None, pandemic_start_limit: int = 5, numpy_rng: Optional[numpy.random.mtrand.RandomState] = None)
Bases: \fBpandemic_simulator.environment.interfaces.infection_model.InfectionModel\fP
.sp
Model of the spreading of the infection.
.INDENT 7.0
.TP
.B needs_contacts(subject_state: Optional[pandemic_simulator.environment.interfaces.infection_model.IndividualInfectionState]) -> bool
This method returns True if the current state needs contacts to be computed in order to step.
:param subject_infection_state: Current state of the infection for the subject. If None, a base state is used.
.UNINDENT
.INDENT 7.0
.TP
.B reset() -> None
Reset the infection model
.UNINDENT
.INDENT 7.0
.TP
.B step(subject_state: Optional[pandemic_simulator.environment.interfaces.infection_model.IndividualInfectionState], subject_age: int, subject_risk: pandemic_simulator.environment.interfaces.infection_model.Risk, infection_probability: float) -> pandemic_simulator.environment.interfaces.infection_model.IndividualInfectionState
This method implements the SEIR model for the infection.
:param subject_state: Current SEIR state for the subject.
:param subject_age: Age of the subject.
:param subject_risk: Health risk for the subject.
:param infection_probability: Probability of getting infected.
.INDENT 7.0
.TP
.B Returns
New SEIR state of the subject.
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class pandemic_simulator.environment.infection_model.seir_infection_model.SpreadProbabilityParams(mean: float = 0.03, sigma: float = 0.03)
Bases: \fBobject\fP
.sp
Parameters for individual spread probabilities.
.INDENT 7.0
.TP
.B mean: float = 0.03
.UNINDENT
.INDENT 7.0
.TP
.B sigma: float = 0.03
.UNINDENT
.UNINDENT
.SS pandemic_simulator.environment.interfaces package
.SS Submodules
.SS pandemic_simulator.environment.interfaces.contact_tracer module
.INDENT 0.0
.TP
.B class pandemic_simulator.environment.interfaces.contact_tracer.ContactTracer
Bases: \fBabc.ABC\fP
.sp
An interface for contact tracing apps.
.INDENT 7.0
.TP
.B abstract add_contacts(contacts: orderedset._orderedset.OrderedSet) -> None
Adds a trace of contacts obtained at a given time.
.INDENT 7.0
.TP
.B Parameters
\fBcontacts\fP \-\- Contacts to add.
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B abstract get_contacts(person_id: pandemic_simulator.environment.interfaces.ids.PersonID) -> Mapping[pandemic_simulator.environment.interfaces.ids.PersonID, numpy.ndarray]
Get contacts
.INDENT 7.0
.TP
.B Parameters
\fBperson_id\fP \-\- Person\(aqs id to trace.
.TP
.B Returns
Mapping from each contact\(aqs id to a numpy array of floats between 0 and 1, representing
.UNINDENT
.sp
the contact hours scaled on a day (24 hours). The length of the sequence depends on the number of days for
data conservation.
.UNINDENT
.INDENT 7.0
.TP
.B abstract new_time_slot() -> None
Adds a new time slot to the contact tracing (e.g., a new day, or a new hour, depending on the granularity).
.UNINDENT
.INDENT 7.0
.TP
.B abstract reset() -> None
Resets the traces.
.UNINDENT
.UNINDENT
.SS pandemic_simulator.environment.interfaces.ids module
.INDENT 0.0
.TP
.B class pandemic_simulator.environment.interfaces.ids.LocationID(name: str)
Bases: \fBobject\fP
.INDENT 7.0
.TP
.B name: str
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class pandemic_simulator.environment.interfaces.ids.PersonID(name: str, age: int)
Bases: \fBobject\fP
.INDENT 7.0
.TP
.B age: int
.UNINDENT
.INDENT 7.0
.TP
.B name: str
.UNINDENT
.UNINDENT
.SS pandemic_simulator.environment.interfaces.infection_model module
.INDENT 0.0
.TP
.B class pandemic_simulator.environment.interfaces.infection_model.IndividualInfectionState(summary: pandemic_simulator.environment.interfaces.infection_model.InfectionSummary, spread_probability: float, is_hospitalized: bool = False, shows_symptoms: bool = False)
Bases: \fBobject\fP
.sp
State of the infection.
.INDENT 7.0
.TP
.B is_hospitalized: bool = False
.UNINDENT
.INDENT 7.0
.TP
.B shows_symptoms: bool = False
.UNINDENT
.INDENT 7.0
.TP
.B spread_probability: float
.UNINDENT
.INDENT 7.0
.TP
.B summary: pandemic_simulator.environment.interfaces.infection_model.InfectionSummary
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class pandemic_simulator.environment.interfaces.infection_model.InfectionModel
Bases: \fBabc.ABC\fP
.sp
Model of the spreading of the infection.
.INDENT 7.0
.TP
.B abstract needs_contacts(subject_infection_state: Optional[pandemic_simulator.environment.interfaces.infection_model.IndividualInfectionState]) -> bool
This method returns True if the current state needs contacts to be computed in order to step.
:param subject_infection_state: Current state of the infection for the subject. If None, a base state is used.
.UNINDENT
.INDENT 7.0
.TP
.B abstract reset() -> None
Reset the infection model
.UNINDENT
.INDENT 7.0
.TP
.B abstract step(subject_infection_state: Optional[pandemic_simulator.environment.interfaces.infection_model.IndividualInfectionState], subject_age: int, subject_risk: pandemic_simulator.environment.interfaces.infection_model.Risk, infection_probability: float) -> pandemic_simulator.environment.interfaces.infection_model.IndividualInfectionState
This method implements the evolution model for the infection.
:param subject_infection_state: Current state of the infection for the subject. If None, a base state is used.
:param subject_age: Age of the subject.
:param subject_risk: Health risk for the subject.
:param infection_probability: Probability of getting infected.
.INDENT 7.0
.TP
.B Returns
New infection state of the subject.
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class pandemic_simulator.environment.interfaces.infection_model.InfectionSummary(value)
Bases: \fBenum.Enum\fP
.sp
An enumeration.
.INDENT 7.0
.TP
.B CRITICAL = \(aqcritical (C)\(aq
.UNINDENT
.INDENT 7.0
.TP
.B DEAD = \(aqdead (D)\(aq
.UNINDENT
.INDENT 7.0
.TP
.B INFECTED = \(aqinfected (I)\(aq
.UNINDENT
.INDENT 7.0
.TP
.B NONE = \(aqnone (N)\(aq
.UNINDENT
.INDENT 7.0
.TP
.B RECOVERED = \(aqrecovered (R)\(aq
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class pandemic_simulator.environment.interfaces.infection_model.Risk(value)
Bases: \fBenum.Enum\fP
.sp
An enumeration.
.INDENT 7.0
.TP
.B HIGH = 1
.UNINDENT
.INDENT 7.0
.TP
.B LOW = 0
.UNINDENT
.UNINDENT
.SS pandemic_simulator.environment.interfaces.location module
.INDENT 0.0
.TP
.B class pandemic_simulator.environment.interfaces.location.Location
Bases: \fBabc.ABC\fP
.sp
Class that implements a location with a pre\-defined operating rules
.INDENT 7.0
.TP
.B abstract add_person_to_location(person_id: pandemic_simulator.environment.interfaces.ids.PersonID) -> None
Adds a person with the given ID to the location
.UNINDENT
.INDENT 7.0
.TP
.B abstract assign_person(person_id: pandemic_simulator.environment.interfaces.ids.PersonID) -> None
Method that assigns a person to the location.
.INDENT 7.0
.TP
.B Parameters
\fBperson_id\fP \-\- PersonID instance
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B abstract property id
Method that returns the id of the location.
.INDENT 7.0
.TP
.B Returns
ID of the location.
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B abstract property init_state
Property that returns the init state of the location.
.INDENT 7.0
.TP
.B Returns
Init state of the location.
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B abstract is_entry_allowed(person_id: pandemic_simulator.environment.interfaces.ids.PersonID) -> bool
Checks if a person with the given ID is allowed to enter the location at the current time.
.INDENT 7.0
.TP
.B Parameters
\fBperson_id\fP \-\- PersonID instance
.TP
.B Returns
Return True if entry is allowed else False
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B abstract location_rule_type() -> Any
.UNINDENT
.INDENT 7.0
.TP
.B abstract remove_person_from_location(person_id: pandemic_simulator.environment.interfaces.ids.PersonID) -> None
Removes a person with the given ID from the location
.UNINDENT
.INDENT 7.0
.TP
.B abstract reset() -> None
Reset location to its initial state.
.UNINDENT
.INDENT 7.0
.TP
.B abstract property road_id
Property that returns the id of the road connected to the location.
.INDENT 7.0
.TP
.B Returns
ID of the location.
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B abstract property state
Property that returns the current state of the location.
.INDENT 7.0
.TP
.B Returns
Current state of the location.
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B abstract sync(sim_time: pandemic_simulator.environment.interfaces.sim_time.SimTime) -> None
Sync location time with simulation time.
.INDENT 7.0
.TP
.B Parameters
\fBsim_time\fP \-\- Current simulation time.
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B abstract update_rules(new_rule: pandemic_simulator.environment.interfaces.location_rules.LocationRule) -> None
Update operating rules based on the given location instruction.
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B exception pandemic_simulator.environment.interfaces.location.LocationError
Bases: \fBException\fP
.sp
Generic location error
.UNINDENT
.SS pandemic_simulator.environment.interfaces.location_rules module
.INDENT 0.0
.TP
.B class pandemic_simulator.environment.interfaces.location_rules.BusinessLocationRule(contact_rate: Union[pandemic_simulator.environment.interfaces.location_states.ContactRate, Default, NoneType] = None, visitor_time: Union[pandemic_simulator.environment.interfaces.sim_time.SimTimeTuple, Default, NoneType] = None, visitor_capacity: Union[Default, int, NoneType] = None, open_time: Union[pandemic_simulator.environment.interfaces.sim_time.SimTimeTuple, Default, NoneType] = None)
Bases: \fI\%pandemic_simulator.environment.interfaces.location_rules.LocationRule\fP
.INDENT 7.0
.TP
.B open_time: Optional[Union[pandemic_simulator.environment.interfaces.sim_time.SimTimeTuple, NewType.<locals>.new_type]] = None
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class pandemic_simulator.environment.interfaces.location_rules.LocationRule(contact_rate: Optional[Union[pandemic_simulator.environment.interfaces.location_states.ContactRate, NewType.<locals>.new_type]] = None, visitor_time: Optional[Union[pandemic_simulator.environment.interfaces.sim_time.SimTimeTuple, NewType.<locals>.new_type]] = None, visitor_capacity: Optional[Union[NewType.<locals>.new_type, int]] = None)
Bases: \fBobject\fP
.sp
A rule to modify the location\(aqs operation.
.INDENT 7.0
.TP
.B contact_rate: Optional[Union[pandemic_simulator.environment.interfaces.location_states.ContactRate, NewType.<locals>.new_type]] = None
.UNINDENT
.INDENT 7.0
.TP
.B visitor_capacity: Optional[Union[NewType.<locals>.new_type, int]] = None
.UNINDENT
.INDENT 7.0
.TP
.B visitor_time: Optional[Union[pandemic_simulator.environment.interfaces.sim_time.SimTimeTuple, NewType.<locals>.new_type]] = None
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class pandemic_simulator.environment.interfaces.location_rules.NonEssentialBusinessLocationRule(contact_rate: Union[pandemic_simulator.environment.interfaces.location_states.ContactRate, Default, NoneType] = None, visitor_time: Union[pandemic_simulator.environment.interfaces.sim_time.SimTimeTuple, Default, NoneType] = None, visitor_capacity: Union[Default, int, NoneType] = None, open_time: Union[pandemic_simulator.environment.interfaces.sim_time.SimTimeTuple, Default, NoneType] = None, lock: Union[bool, NoneType] = None)
Bases: \fI\%pandemic_simulator.environment.interfaces.location_rules.BusinessLocationRule\fP
.INDENT 7.0
.TP
.B lock: Optional[bool] = None
.UNINDENT
.UNINDENT
.SS pandemic_simulator.environment.interfaces.location_states module
.INDENT 0.0
.TP
.B class pandemic_simulator.environment.interfaces.location_states.BusinessLocationState(is_open: bool, visitor_capacity: int = \- 1, contact_rate: pandemic_simulator.environment.interfaces.location_states.ContactRate = ContactRate(min_assignees=1, min_assignees_visitors=1, min_visitors=0, fraction_assignees=0.5, fraction_assignees_visitors=0.0, fraction_visitors=0.0), visitor_time: pandemic_simulator.environment.interfaces.sim_time.SimTimeTuple = SimTimeTuple(hours=0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, week_days=0, 1, 2, 3, 4, 5, 6, days=0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364), open_time: pandemic_simulator.environment.interfaces.sim_time.SimTimeTuple = SimTimeTuple(hours=9, 10, 11, 12, 13, 14, 15, 16, 17, week_days=0, 1, 2, 3, 4, days=0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364))
Bases: \fI\%pandemic_simulator.environment.interfaces.location_states.LocationState\fP
.INDENT 7.0
.TP
.B open_time: pandemic_simulator.environment.interfaces.sim_time.SimTimeTuple = SimTimeTuple(hours=(9, 10, 11, 12, 13, 14, 15, 16, 17), week_days=(0, 1, 2, 3, 4), days=(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364))
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class pandemic_simulator.environment.interfaces.location_states.ContactRate(min_assignees: int, min_assignees_visitors: int, min_visitors: int, fraction_assignees: float, fraction_assignees_visitors: float, fraction_visitors: float)
Bases: \fBobject\fP
.sp
Defines contact rates in a location.
.INDENT 7.0
.TP
.B fraction_assignees: float
A fraction of contacts between all assignees currently in the location. A value in [0, 1]
.UNINDENT
.INDENT 7.0
.TP
.B fraction_assignees_visitors: float
A fraction of contacts between assignees and visitors currently in the location. A value in [0, 1]
.UNINDENT
.INDENT 7.0
.TP
.B fraction_visitors: float
A fraction of contacts between all visitors currently in the location. A value in [0, 1]
.UNINDENT
.INDENT 7.0
.TP
.B min_assignees: int
Minimum number of contacts between assignees in the location
.UNINDENT
.INDENT 7.0
.TP
.B min_assignees_visitors: int
Minimum number of contacts between assignees and visitors in the location
.UNINDENT
.INDENT 7.0
.TP
.B min_visitors: int
Minimum number of contacts between visitors in the location
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class pandemic_simulator.environment.interfaces.location_states.LocationState(is_open: bool, visitor_capacity: int = \- 1, contact_rate: pandemic_simulator.environment.interfaces.location_states.ContactRate = ContactRate(min_assignees=1, min_assignees_visitors=1, min_visitors=0, fraction_assignees=0.5, fraction_assignees_visitors=0.0, fraction_visitors=0.0), visitor_time: pandemic_simulator.environment.interfaces.sim_time.SimTimeTuple = SimTimeTuple(hours=0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, week_days=0, 1, 2, 3, 4, 5, 6, days=0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364))
Bases: \fBobject\fP
.sp
State of the location.
.INDENT 7.0
.TP
.B assignees: orderedset._orderedset.OrderedSet
A set of ids of persons assigned to the location. Default is an empty set where nobody is assigned.
.UNINDENT
.INDENT 7.0
.TP
.B assignees_in_location: orderedset._orderedset.OrderedSet
A set of ids of assignes who are currently in the location. Default is an empty set.
.UNINDENT
.INDENT 7.0
.TP
.B contact_rate: pandemic_simulator.environment.interfaces.location_states.ContactRate = ContactRate(min_assignees=1, min_assignees_visitors=1, min_visitors=0, fraction_assignees=0.5, fraction_assignees_visitors=0.0, fraction_visitors=0.0)
Rate at which assignees interact with other persons at that location.
.UNINDENT
.INDENT 7.0
.TP
.B is_open: bool
A boolean to indicate if the location is open or closed.
.UNINDENT
.INDENT 7.0
.TP
.B property persons_in_location
Property that returns the set of person ids in the location.
.INDENT 7.0
.TP
.B Returns
ID of the persons in the location.
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B social_gathering_event: bool = False
Set to True to advertise a social gathering at the location.
.UNINDENT
.INDENT 7.0
.TP
.B visitor_capacity: int = \-1
Number of visitors allowed during the visitor_time
.UNINDENT
.INDENT 7.0
.TP
.B visitor_time: pandemic_simulator.environment.interfaces.sim_time.SimTimeTuple = SimTimeTuple(hours=(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23), week_days=(0, 1, 2, 3, 4, 5, 6), days=(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364))
Time when visitors are allowed to enter.
.UNINDENT
.INDENT 7.0
.TP
.B visitors_in_location: orderedset._orderedset.OrderedSet
A set of ids of visitors who are currently in the location. Default is an empty set.
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class pandemic_simulator.environment.interfaces.location_states.NonEssentialBusinessLocationState(is_open: bool, visitor_capacity: int = \- 1, contact_rate: pandemic_simulator.environment.interfaces.location_states.ContactRate = ContactRate(min_assignees=1, min_assignees_visitors=1, min_visitors=0, fraction_assignees=0.5, fraction_assignees_visitors=0.0, fraction_visitors=0.0), visitor_time: pandemic_simulator.environment.interfaces.sim_time.SimTimeTuple = SimTimeTuple(hours=0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, week_days=0, 1, 2, 3, 4, 5, 6, days=0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364), open_time: pandemic_simulator.environment.interfaces.sim_time.SimTimeTuple = SimTimeTuple(hours=9, 10, 11, 12, 13, 14, 15, 16, 17, week_days=0, 1, 2, 3, 4, days=0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364), locked: bool = False)
Bases: \fI\%pandemic_simulator.environment.interfaces.location_states.BusinessLocationState\fP
.INDENT 7.0
.TP
.B locked: bool = False
.UNINDENT
.INDENT 7.0
.TP
.B open_time: pandemic_simulator.environment.interfaces.sim_time.SimTimeTuple = SimTimeTuple(hours=(9, 10, 11, 12, 13, 14, 15, 16, 17), week_days=(0, 1, 2, 3, 4), days=(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364))
.UNINDENT
.UNINDENT
.SS pandemic_simulator.environment.interfaces.pandemic_observation module
.INDENT 0.0
.TP
.B class pandemic_simulator.environment.interfaces.pandemic_observation.PandemicObservation(global_infection_summary: numpy.ndarray, global_testing_summary: numpy.ndarray, stage: numpy.ndarray, infection_above_threshold: numpy.ndarray, time_day: numpy.ndarray, unlocked_non_essential_business_locations: Optional[numpy.ndarray] = None)
Bases: \fBobject\fP
.sp
Dataclass that updates numpy arrays with information from PandemicSimState. Typically, this observation is
used by the reinforcement learning interface.
.INDENT 7.0
.TP
.B classmethod create_empty(history_size: int = 1, num_non_essential_business: Optional[int] = None) -> pandemic_simulator.environment.interfaces.pandemic_observation.PandemicObservation
Creates an empty observation TNC layout array.
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBhistory_size\fP \-\- Size of history. If set > 1, the observation can hold information from multiple sequences
of PandemicSimStates.
.IP \(bu 2
\fBnum_non_essential_business\fP \-\- Number of non essential business locations.
.UNINDENT
.TP
.B Returns
an empty PandemicObservation instance
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B global_infection_summary: numpy.ndarray
.UNINDENT
.INDENT 7.0
.TP
.B global_testing_summary: numpy.ndarray
.UNINDENT
.INDENT 7.0
.TP
.B infection_above_threshold: numpy.ndarray
.UNINDENT
.INDENT 7.0
.TP
.B stage: numpy.ndarray
.UNINDENT
.INDENT 7.0
.TP
.B time_day: numpy.ndarray
.UNINDENT
.INDENT 7.0
.TP
.B unlocked_non_essential_business_locations: Optional[numpy.ndarray] = None
.UNINDENT
.INDENT 7.0
.TP
.B update_obs_with_sim_state(sim_state: pandemic_simulator.environment.interfaces.sim_state.PandemicSimState, hist_index: int = 0, business_location_ids: Optional[Sequence[pandemic_simulator.environment.interfaces.ids.LocationID]] = None) -> None
Update the PandemicObservation with the information from PandemicSimState.
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBsim_state\fP \-\- PandemicSimState instance
.IP \(bu 2
\fBhist_index\fP \-\- history time index
.IP \(bu 2
\fBbusiness_location_ids\fP \-\- business location ids
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.SS pandemic_simulator.environment.interfaces.pandemic_testing module
.INDENT 0.0
.TP
.B class pandemic_simulator.environment.interfaces.pandemic_testing.GlobalTestingState(summary: Dict[pandemic_simulator.environment.interfaces.infection_model.InfectionSummary, int], num_tests: int)
Bases: \fBobject\fP
.INDENT 7.0
.TP
.B num_tests: int
.UNINDENT
.INDENT 7.0
.TP
.B summary: Dict[pandemic_simulator.environment.interfaces.infection_model.InfectionSummary, int]
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class pandemic_simulator.environment.interfaces.pandemic_testing.PandemicTesting
Bases: \fBabc.ABC\fP
.sp
An interface for pandemic testing.
.INDENT 7.0
.TP
.B abstract admit_person(person_state: pandemic_simulator.environment.interfaces.person.PersonState) -> bool
Return a bool whether to admit a person for testing.
.INDENT 7.0
.TP
.B Parameters
\fBperson_state\fP \-\- Person\(aqs state
.TP
.B Returns
bool
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B abstract test_person(person_state: pandemic_simulator.environment.interfaces.person.PersonState) -> pandemic_simulator.environment.interfaces.pandemic_testing_result.PandemicTestResult
Test the given person and return the test result
:param person_state: Person\(aqs state
:return: PandemicTestResult instance
.UNINDENT
.UNINDENT
.SS pandemic_simulator.environment.interfaces.pandemic_testing_result module
.INDENT 0.0
.TP
.B class pandemic_simulator.environment.interfaces.pandemic_testing_result.PandemicTestResult(value)
Bases: \fBenum.IntEnum\fP
.sp
An enumeration.
.INDENT 7.0
.TP
.B CRITICAL = 3
.UNINDENT
.INDENT 7.0
.TP
.B DEAD = 4
.UNINDENT
.INDENT 7.0
.TP
.B NEGATIVE = 1
.UNINDENT
.INDENT 7.0
.TP
.B POSITIVE = 2
.UNINDENT
.INDENT 7.0
.TP
.B UNTESTED = 0
.UNINDENT
.UNINDENT
.SS pandemic_simulator.environment.interfaces.pandemic_types module
.INDENT 0.0
.TP
.B pandemic_simulator.environment.interfaces.pandemic_types.Default(x)
.UNINDENT
.INDENT 0.0
.TP
.B pandemic_simulator.environment.interfaces.pandemic_types.NoOP(x)
.UNINDENT
.SS pandemic_simulator.environment.interfaces.person module
.INDENT 0.0
.TP
.B class pandemic_simulator.environment.interfaces.person.Person
Bases: \fBabc.ABC\fP
.sp
Class that implements a sim person automaton with a pre\-defined policy.
.INDENT 7.0
.TP
.B abstract property assigned_locations
Property that returns a sequence of location ids that the person is assigned to.
.INDENT 7.0
.TP
.B Returns
A collection of LocationIDs
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B abstract enter_location(location_id: pandemic_simulator.environment.interfaces.ids.LocationID) -> bool
Enter a location.
.INDENT 7.0
.TP
.B Parameters
\fBlocation_id\fP \-\- LocationID instance
.TP
.B Returns
True if successful else False
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B abstract property home
Property that returns the person\(aqs home location id.
.INDENT 7.0
.TP
.B Returns
ID of the home location
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B abstract property id
Method that returns the id of the person.
.INDENT 7.0
.TP
.B Returns
ID of the person.
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B abstract receive_regulation(regulation: pandemic_simulator.environment.interfaces.regulation.PandemicRegulation) -> None
Receive a regulation that can potentially update the person\(aqs policy.
.INDENT 7.0
.TP
.B Parameters
\fBregulation\fP \-\- a PandemicRegulation instance
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B abstract reset() -> None
Reset person to its initial state.
.UNINDENT
.INDENT 7.0
.TP
.B abstract property state
Property that returns the current state of the person.
.INDENT 7.0
.TP
.B Returns
Current state of the person.
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B abstract step(sim_time: pandemic_simulator.environment.interfaces.sim_time.SimTime, contact_tracer: Optional[pandemic_simulator.environment.interfaces.contact_tracer.ContactTracer] = None) -> Optional[NewType.<locals>.new_type]
Method that steps through the person\(aqs policy. The step can return a
NoOp to indicate no operation was carried out.
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBsim_time\fP \-\- Current simulation time.
.IP \(bu 2
\fBcontact_tracer\fP \-\- Traces of previous contacts of the person.
.UNINDENT
.TP
.B Returns
Return NoOp if no operation was carried out otherwise None.
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class pandemic_simulator.environment.interfaces.person.PersonState(current_location: pandemic_simulator.environment.interfaces.ids.LocationID, risk: pandemic_simulator.environment.interfaces.infection_model.Risk, infection_state: Optional[pandemic_simulator.environment.interfaces.infection_model.IndividualInfectionState] = None, quarantine: bool = False, quarantine_if_contact_positive: bool = False, quarantine_if_household_quarantined: bool = False, sick_at_home: bool = False, avoid_gathering_size: int = \-1, test_result: pandemic_simulator.environment.interfaces.pandemic_testing_result.PandemicTestResult = <PandemicTestResult.UNTESTED: 0>)
Bases: \fBobject\fP
.sp
State of the person.
.INDENT 7.0
.TP
.B avoid_gathering_size: int = \-1
.UNINDENT
.INDENT 7.0
.TP
.B avoid_location_types: List[type]
.UNINDENT
.INDENT 7.0
.TP
.B current_location: pandemic_simulator.environment.interfaces.ids.LocationID
.UNINDENT
.INDENT 7.0
.TP
.B infection_spread_multiplier: float = 1.0
.UNINDENT
.INDENT 7.0
.TP
.B infection_state: Optional[pandemic_simulator.environment.interfaces.infection_model.IndividualInfectionState] = None
.UNINDENT
.INDENT 7.0
.TP
.B not_infection_probability: float = 1.0
.UNINDENT
.INDENT 7.0
.TP
.B quarantine: bool = False
.UNINDENT
.INDENT 7.0
.TP
.B quarantine_if_contact_positive: bool = False
.UNINDENT
.INDENT 7.0
.TP
.B quarantine_if_household_quarantined: bool = False
.UNINDENT
.INDENT 7.0
.TP
.B risk: pandemic_simulator.environment.interfaces.infection_model.Risk
.UNINDENT
.INDENT 7.0
.TP
.B sick_at_home: bool = False
.UNINDENT
.INDENT 7.0
.TP
.B test_result: pandemic_simulator.environment.interfaces.pandemic_testing_result.PandemicTestResult = 0
.UNINDENT
.UNINDENT
.SS pandemic_simulator.environment.interfaces.person_routine module
.INDENT 0.0
.TP
.B class pandemic_simulator.environment.interfaces.person_routine.PersonRoutine(start_loc: Optional[pandemic_simulator.environment.interfaces.ids.LocationID], end_loc: pandemic_simulator.environment.interfaces.ids.LocationID, trigger_interval: pandemic_simulator.environment.interfaces.sim_time.SimTimeInterval, trigger_hour_probability: float = 0.5, end_locs: Sequence[pandemic_simulator.environment.interfaces.ids.LocationID] = (), explore_probability: float = 0.05)
Bases: \fBobject\fP
.sp
A dataclass that defines a person\(aqs routine every step (hour).
.INDENT 7.0
.TP
.B end_loc: pandemic_simulator.environment.interfaces.ids.LocationID
End location of the routine.
.UNINDENT
.INDENT 7.0
.TP
.B end_locs: Sequence[pandemic_simulator.environment.interfaces.ids.LocationID] = ()
A collection of end locations of the routine to explore.
.UNINDENT
.INDENT 7.0
.TP
.B explore_probability: float = 0.05
Exploration probability
.UNINDENT
.INDENT 7.0
.TP
.B start_loc: Optional[pandemic_simulator.environment.interfaces.ids.LocationID]
Start location of the routine. If None, the routine can be started at any location.
.UNINDENT
.INDENT 7.0
.TP
.B trigger_hour_probability: float = 0.5
The probability for starting the routine around the trigger interval.
.UNINDENT
.INDENT 7.0
.TP
.B trigger_interval: pandemic_simulator.environment.interfaces.sim_time.SimTimeInterval
A sim time interval that specifies when to start the routine.
.UNINDENT
.UNINDENT
.SS pandemic_simulator.environment.interfaces.registry module
.INDENT 0.0
.TP
.B exception pandemic_simulator.environment.interfaces.registry.RegistrationError
Bases: \fBException\fP
.sp
An error raised by the CityRegistry
.UNINDENT
.INDENT 0.0
.TP
.B class pandemic_simulator.environment.interfaces.registry.Registry
Bases: \fBabc.ABC\fP
.sp
A global registry for all persons and location instances
.INDENT 7.0
.TP
.B abstract clear_quarantined(person_id: pandemic_simulator.environment.interfaces.ids.PersonID) -> None
Clear person\(aqs quarantined information.
.UNINDENT
.INDENT 7.0
.TP
.B abstract get_households(person_id: pandemic_simulator.environment.interfaces.ids.PersonID) -> Set[pandemic_simulator.environment.interfaces.ids.PersonID]
Return person\(aqs households
.UNINDENT
.INDENT 7.0
.TP
.B abstract get_person_home_id(person_id: pandemic_simulator.environment.interfaces.ids.PersonID) -> pandemic_simulator.environment.interfaces.ids.LocationID
Return person\(aqs home id
.UNINDENT
.INDENT 7.0
.TP
.B abstract get_person_infection_summary(person_id: pandemic_simulator.environment.interfaces.ids.PersonID) -> Optional[pandemic_simulator.environment.interfaces.infection_model.InfectionSummary]
Return person\(aqs infection summary
.UNINDENT
.INDENT 7.0
.TP
.B abstract get_person_quarantined_state(person_id: pandemic_simulator.environment.interfaces.ids.PersonID) -> bool
Return person\(aqs quarantined state.
.UNINDENT
.INDENT 7.0
.TP
.B abstract get_person_test_result(person_id: pandemic_simulator.environment.interfaces.ids.PersonID) -> pandemic_simulator.environment.interfaces.pandemic_testing_result.PandemicTestResult
Return person\(aqs test result
.UNINDENT
.INDENT 7.0
.TP
.B abstract get_persons_in_location(location_id: pandemic_simulator.environment.interfaces.ids.LocationID) -> Set[pandemic_simulator.environment.interfaces.ids.PersonID]
Return a list of persons in the given location
.UNINDENT
.INDENT 7.0
.TP
.B abstract location_id_to_type(location_id: pandemic_simulator.environment.interfaces.ids.LocationID) -> type
Return the type of location with the given ID.
.UNINDENT
.INDENT 7.0
.TP
.B abstract property location_ids
Return a list of registered location ids
.UNINDENT
.INDENT 7.0
.TP
.B abstract location_ids_of_type(location_type: type) -> List[pandemic_simulator.environment.interfaces.ids.LocationID]
Return a list of location ids for the given type of location.
.UNINDENT
.INDENT 7.0
.TP
.B abstract property location_ids_with_social_events
Return a list of location ids where there are active social events.
.UNINDENT
.INDENT 7.0
.TP
.B abstract property person_ids
Return a list of registered person ids
.UNINDENT
.INDENT 7.0
.TP
.B abstract quarantine_person(person_id: pandemic_simulator.environment.interfaces.ids.PersonID) -> None
Mark person to be quarantined.
.UNINDENT
.INDENT 7.0
.TP
.B abstract reassign_locations(person: pandemic_simulator.environment.interfaces.person.Person) -> None
Re\-assign locations for the given person.
.UNINDENT
.INDENT 7.0
.TP
.B abstract register_location(location: pandemic_simulator.environment.interfaces.location.Location) -> None
Register a location instance
.INDENT 7.0
.TP
.B Parameters
\fBlocation\fP \-\- Location instance
.TP
.B Returns

.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B abstract register_person(person: pandemic_simulator.environment.interfaces.person.Person) -> None
Register a person instance
.INDENT 7.0
.TP
.B Parameters
\fBperson\fP \-\- Person instance
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B abstract register_person_entry_in_location(person_id: pandemic_simulator.environment.interfaces.ids.PersonID, location_id: pandemic_simulator.environment.interfaces.ids.LocationID) -> bool
Register a person\(aqs entry in the specified location
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBperson_id\fP \-\- PersonID instance
.IP \(bu 2
\fBlocation_id\fP \-\- LocationID instance
.UNINDENT
.TP
.B Returns
bool to indicate if the registration was successful.
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B abstract update_location_specific_information() -> None
update any location specific information that is accessed by person.
.UNINDENT
.UNINDENT
.SS pandemic_simulator.environment.interfaces.regulation module
.INDENT 0.0
.TP
.B class pandemic_simulator.environment.interfaces.regulation.PandemicRegulation(location_type_to_rule_kwargs: Optional[Dict[Type, Dict[str, Any]]] = None, business_type_to_rule_kwargs: Optional[Dict[Type, Dict[str, Any]]] = None, social_distancing: Optional[Union[float, NewType.<locals>.new_type]] = None, quarantine: bool = False, quarantine_if_contact_positive: bool = False, quarantine_if_household_quarantined: bool = False, stay_home_if_sick: bool = False, practice_good_hygiene: bool = False, wear_facial_coverings: bool = False, risk_to_avoid_gathering_size: Dict[pandemic_simulator.environment.interfaces.infection_model.Risk, int] = <factory>, risk_to_avoid_location_types: Optional[Dict[pandemic_simulator.environment.interfaces.infection_model.Risk, List[type]]] = None, stage: int = 0)
Bases: \fBobject\fP
.sp
Regulation passed to the Pandemic simulator that modifies the location rules and person behaviors.
.INDENT 7.0
.TP
.B business_type_to_rule_kwargs: Optional[Dict[Type, Dict[str, Any]]] = None
A mapping that broadcasts a generic set of rules to the locations of the same business
(Essential / Non\-essential) type.
.UNINDENT
.INDENT 7.0
.TP
.B location_type_to_rule_kwargs: Optional[Dict[Type, Dict[str, Any]]] = None
A mapping that broadcasts a generic set of rules to the locations of the same type.
.UNINDENT
.INDENT 7.0
.TP
.B practice_good_hygiene: bool = False
A bool to tell all persons to practice good hygiene.
.UNINDENT
.INDENT 7.0
.TP
.B quarantine: bool = False
A bool to tell all persons to quarantine themselves at home.
.UNINDENT
.INDENT 7.0
.TP
.B quarantine_if_contact_positive: bool = False
A bool to tell all persons to quarantine themselves at home if a contact is positive.
Works only if contact tracing is enabled.
.UNINDENT
.INDENT 7.0
.TP
.B quarantine_if_household_quarantined: bool = False
A bool to tell all persons to quarantine themselves at home if a household is quarantined.
.UNINDENT
.INDENT 7.0
.TP
.B risk_to_avoid_gathering_size: Dict[pandemic_simulator.environment.interfaces.infection_model.Risk, int]
A mapping of the peron\(aqs risk with the gathering size (or more) that they should avoid. \-1 means no limit
.UNINDENT
.INDENT 7.0
.TP
.B risk_to_avoid_location_types: Optional[Dict[pandemic_simulator.environment.interfaces.infection_model.Risk, List[type]]] = None
A mapping of the peron\(aqs risk with the locations that they should avoid.
.UNINDENT
.INDENT 7.0
.TP
.B social_distancing: Optional[Union[float, NewType.<locals>.new_type]] = None
A value in [0, 1] that determines how people should interact amongst each other at all locations.
1 \- zero contacts, 0 \- interact with everyone (impractical).
.UNINDENT
.INDENT 7.0
.TP
.B stage: int = 0
The discrete severity stage of the regulation. 0 \- normal, severity increases with the value.
.UNINDENT
.INDENT 7.0
.TP
.B stay_home_if_sick: bool = False
A bool to tell all persons to stay home if sick.
.UNINDENT
.INDENT 7.0
.TP
.B wear_facial_coverings: bool = False
A bool to tell all persons wear facial coverings.
.UNINDENT
.UNINDENT
.SS pandemic_simulator.environment.interfaces.sim_state module
.INDENT 0.0
.TP
.B class pandemic_simulator.environment.interfaces.sim_state.PandemicSimState(id_to_person_state: Dict[pandemic_simulator.environment.interfaces.ids.PersonID, pandemic_simulator.environment.interfaces.person.PersonState], id_to_location_state: Dict[pandemic_simulator.environment.interfaces.ids.LocationID, pandemic_simulator.environment.interfaces.location_states.LocationState], global_infection_summary: Dict[pandemic_simulator.environment.interfaces.infection_model.InfectionSummary, int], global_testing_state: pandemic_simulator.environment.interfaces.pandemic_testing.GlobalTestingState, infection_above_threshold: bool, regulation_stage: int, sim_time: pandemic_simulator.environment.interfaces.sim_time.SimTime)
Bases: \fBobject\fP
.INDENT 7.0
.TP
.B global_infection_summary: Dict[pandemic_simulator.environment.interfaces.infection_model.InfectionSummary, int]
.UNINDENT
.INDENT 7.0
.TP
.B global_testing_state: pandemic_simulator.environment.interfaces.pandemic_testing.GlobalTestingState
.UNINDENT
.INDENT 7.0
.TP
.B id_to_location_state: Dict[pandemic_simulator.environment.interfaces.ids.LocationID, pandemic_simulator.environment.interfaces.location_states.LocationState]
.UNINDENT
.INDENT 7.0
.TP
.B id_to_person_state: Dict[pandemic_simulator.environment.interfaces.ids.PersonID, pandemic_simulator.environment.interfaces.person.PersonState]
.UNINDENT
.INDENT 7.0
.TP
.B infection_above_threshold: bool
.UNINDENT
.INDENT 7.0
.TP
.B regulation_stage: int
.UNINDENT
.INDENT 7.0
.TP
.B sim_time: pandemic_simulator.environment.interfaces.sim_time.SimTime
.UNINDENT
.UNINDENT
.SS pandemic_simulator.environment.interfaces.sim_state_consumer module
.INDENT 0.0
.TP
.B class pandemic_simulator.environment.interfaces.sim_state_consumer.SimStateConsumer
Bases: \fBabc.ABC\fP
.INDENT 7.0
.TP
.B close() -> None
Performs any closing operation. For example, saves and closes file objects etc.
.UNINDENT
.INDENT 7.0
.TP
.B abstract consume_begin(sim_state: pandemic_simulator.environment.interfaces.sim_state.PandemicSimState) -> None
Begin the consumer. For example, the start of each episode
.UNINDENT
.INDENT 7.0
.TP
.B abstract consume_state(sim_state: pandemic_simulator.environment.interfaces.sim_state.PandemicSimState, regulation: pandemic_simulator.environment.interfaces.regulation.PandemicRegulation) -> None
.UNINDENT
.INDENT 7.0
.TP
.B abstract finalize(*args: Any, **kwargs: Any) -> Any
Performs any final operations (if needed). For example, finalize and return a metric.
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBargs\fP \-\- Any args for finalizing the consumer
.IP \(bu 2
\fBkwargs\fP \-\- Any kwargs for finalizing the consumer
.UNINDENT
.TP
.B Returns
Any value returned after finalizing
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B abstract reset() -> None
Reset consumer
.UNINDENT
.UNINDENT
.SS pandemic_simulator.environment.interfaces.sim_time module
.INDENT 0.0
.TP
.B class pandemic_simulator.environment.interfaces.sim_time.SimTime(hour: int = 0, week_day: int = 0, day: int = 0, year: int = 0)
Bases: \fBobject\fP
.INDENT 7.0
.TP
.B day: int = 0
.UNINDENT
.INDENT 7.0
.TP
.B hour: int = 0
.UNINDENT
.INDENT 7.0
.TP
.B now(frmt: str = \(aqydwh\(aq) -> List[int]
Returns current time as list of ints in the specified format
.UNINDENT
.INDENT 7.0
.TP
.B step() -> None
Increments time by one discrete step
.UNINDENT
.INDENT 7.0
.TP
.B week_day: int = 0
.UNINDENT
.INDENT 7.0
.TP
.B year: int = 0
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class pandemic_simulator.environment.interfaces.sim_time.SimTimeInterval(hour: int = 0, day: int = 0, year: int = 0, offset_hour: int = 0, offset_day: int = 0)
Bases: \fBobject\fP
.sp
Interval specified in hours/week_day/day/year
.INDENT 7.0
.TP
.B day: int = 0
Set a value in [0, 365] to indicate an interval in days
.UNINDENT
.INDENT 7.0
.TP
.B hour: int = 0
Set a value in [0, 23] to indicate an interval in hours.
.UNINDENT
.INDENT 7.0
.TP
.B in_hours() -> int
.UNINDENT
.INDENT 7.0
.TP
.B offset_day: int = 0
An offset in days [0, 365]. Example \- day = 3 and offset_day = 1 would trigger once in 3 days starting a day
later.
.UNINDENT
.INDENT 7.0
.TP
.B offset_hour: int = 0
An offset in hours [0, 23]. Example \- day = 1 and offset_hour = 12 would trigger at Noon everyday.
.UNINDENT
.INDENT 7.0
.TP
.B trigger_at_interval(sim_time: pandemic_simulator.environment.interfaces.sim_time.SimTime) -> bool
Return True at sim time interval and False otherwise.
.UNINDENT
.INDENT 7.0
.TP
.B year: int = 0
Set a value in >0 to indicate an interval in years
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class pandemic_simulator.environment.interfaces.sim_time.SimTimeTuple(hours: Tuple[int, \&...] = 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, week_days: Tuple[int, \&...] = 0, 1, 2, 3, 4, 5, 6, days: Tuple[int, \&...] = 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364)
Bases: \fBobject\fP
.INDENT 7.0
.TP
.B days: Tuple[int, \&...] = (0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364)
.UNINDENT
.INDENT 7.0
.TP
.B hours: Tuple[int, \&...] = (0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23)
.UNINDENT
.INDENT 7.0
.TP
.B week_days: Tuple[int, \&...] = (0, 1, 2, 3, 4, 5, 6)
.UNINDENT
.UNINDENT
.SS pandemic_simulator.environment.location package
.SS Submodules
.SS pandemic_simulator.environment.location.base module
.INDENT 0.0
.TP
.B class pandemic_simulator.environment.location.base.BaseLocation(registry: pandemic_simulator.environment.interfaces.registry.Registry, name: Optional[str] = None, road_id: Optional[pandemic_simulator.environment.interfaces.ids.LocationID] = None, init_state: Optional[pandemic_simulator.environment.interfaces.location_states.LocationState] = None, numpy_rng: Optional[numpy.random.mtrand.RandomState] = None)
Bases: \fBpandemic_simulator.environment.interfaces.location.Location\fP
.sp
Class that implements a base location.
.INDENT 7.0
.TP
.B add_person_to_location(person_id: pandemic_simulator.environment.interfaces.ids.PersonID) -> None
Adds a person with the given ID to the location
.UNINDENT
.INDENT 7.0
.TP
.B assign_person(person_id: pandemic_simulator.environment.interfaces.ids.PersonID) -> None
Method that assigns a person to the location.
.INDENT 7.0
.TP
.B Parameters
\fBperson_id\fP \-\- PersonID instance
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B property id
Method that returns the id of the location.
.INDENT 7.0
.TP
.B Returns
ID of the location.
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B property init_state
Property that returns the init state of the location.
.INDENT 7.0
.TP
.B Returns
Init state of the location.
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B is_entry_allowed(person_id: pandemic_simulator.environment.interfaces.ids.PersonID) -> bool
Checks if a person with the given ID is allowed to enter the location at the current time.
.INDENT 7.0
.TP
.B Parameters
\fBperson_id\fP \-\- PersonID instance
.TP
.B Returns
Return True if entry is allowed else False
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B location_rule_type
alias of \fBpandemic_simulator.environment.interfaces.location_rules.LocationRule\fP
.UNINDENT
.INDENT 7.0
.TP
.B remove_person_from_location(person_id: pandemic_simulator.environment.interfaces.ids.PersonID) -> None
Removes a person with the given ID from the location
.UNINDENT
.INDENT 7.0
.TP
.B reset() -> None
Reset location to its initial state.
.UNINDENT
.INDENT 7.0
.TP
.B property road_id
Property that returns the id of the road connected to the location.
.INDENT 7.0
.TP
.B Returns
ID of the location.
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B property state
Property that returns the current state of the location.
.INDENT 7.0
.TP
.B Returns
Current state of the location.
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B sync(sim_time: pandemic_simulator.environment.interfaces.sim_time.SimTime) -> None
Sync location time with simulation time.
.INDENT 7.0
.TP
.B Parameters
\fBsim_time\fP \-\- Current simulation time.
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B update_rules(new_rule: pandemic_simulator.environment.interfaces.location_rules.LocationRule) -> None
Update operating rules based on the given location instruction.
.UNINDENT
.UNINDENT
.SS pandemic_simulator.environment.location.base_business module
.INDENT 0.0
.TP
.B class pandemic_simulator.environment.location.base_business.AgeRestrictedBusinessBaseLocation(age_limits: Tuple[int, int], registry: pandemic_simulator.environment.interfaces.registry.Registry, name: Optional[str] = None, road_id: Optional[pandemic_simulator.environment.interfaces.ids.LocationID] = None, init_state: Optional[pandemic_simulator.environment.interfaces.location_states.NonEssentialBusinessLocationState] = None, numpy_rng: Optional[numpy.random.mtrand.RandomState] = None)
Bases: \fI\%pandemic_simulator.environment.location.base_business.NonEssentialBusinessBaseLocation\fP
.sp
Class that implements a base age\-restricted business location.
.INDENT 7.0
.TP
.B is_entry_allowed(person_id: pandemic_simulator.environment.interfaces.ids.PersonID) -> bool
Checks if a person with the given ID is allowed to enter the location at the current time.
.INDENT 7.0
.TP
.B Parameters
\fBperson_id\fP \-\- PersonID instance
.TP
.B Returns
Return True if entry is allowed else False
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class pandemic_simulator.environment.location.base_business.BusinessBaseLocation(registry: pandemic_simulator.environment.interfaces.registry.Registry, name: Optional[str] = None, road_id: Optional[pandemic_simulator.environment.interfaces.ids.LocationID] = None, init_state: Optional[pandemic_simulator.environment.interfaces.location_states.BusinessLocationState] = None, numpy_rng: Optional[numpy.random.mtrand.RandomState] = None)
Bases: \fI\%pandemic_simulator.environment.location.base.BaseLocation\fP
.sp
Class that implements a base business location that has finite open hours.
.INDENT 7.0
.TP
.B location_rule_type
alias of \fBpandemic_simulator.environment.interfaces.location_rules.BusinessLocationRule\fP
.UNINDENT
.INDENT 7.0
.TP
.B update_rules(new_rule: pandemic_simulator.environment.interfaces.location_rules.LocationRule) -> None
Update operating rules based on the given location instruction.
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class pandemic_simulator.environment.location.base_business.EssentialBusinessBaseLocation(registry: pandemic_simulator.environment.interfaces.registry.Registry, name: Optional[str] = None, road_id: Optional[pandemic_simulator.environment.interfaces.ids.LocationID] = None, init_state: Optional[pandemic_simulator.environment.interfaces.location_states.BusinessLocationState] = None, numpy_rng: Optional[numpy.random.mtrand.RandomState] = None)
Bases: \fI\%pandemic_simulator.environment.location.base_business.BusinessBaseLocation\fP
.sp
Class that implements an essential business location that has finite open hours.
.UNINDENT
.INDENT 0.0
.TP
.B class pandemic_simulator.environment.location.base_business.NonEssentialBusinessBaseLocation(registry: pandemic_simulator.environment.interfaces.registry.Registry, name: Optional[str] = None, road_id: Optional[pandemic_simulator.environment.interfaces.ids.LocationID] = None, init_state: Optional[pandemic_simulator.environment.interfaces.location_states.NonEssentialBusinessLocationState] = None, numpy_rng: Optional[numpy.random.mtrand.RandomState] = None)
Bases: \fI\%pandemic_simulator.environment.location.base_business.BusinessBaseLocation\fP
.sp
Class that implements a non essential base business location that has finite open hours.
.INDENT 7.0
.TP
.B location_rule_type
alias of \fBpandemic_simulator.environment.interfaces.location_rules.NonEssentialBusinessLocationRule\fP
.UNINDENT
.INDENT 7.0
.TP
.B sync(sim_time: pandemic_simulator.environment.interfaces.sim_time.SimTime) -> None
Sync location time with simulation time.
.INDENT 7.0
.TP
.B Parameters
\fBsim_time\fP \-\- Current simulation time.
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B update_rules(new_rule: pandemic_simulator.environment.interfaces.location_rules.LocationRule) -> None
Update operating rules based on the given location instruction.
.UNINDENT
.UNINDENT
.SS pandemic_simulator.environment.location.cemetery module
.INDENT 0.0
.TP
.B class pandemic_simulator.environment.location.cemetery.Cemetery(registry: pandemic_simulator.environment.interfaces.registry.Registry, name: Optional[str] = None, road_id: Optional[pandemic_simulator.environment.interfaces.ids.LocationID] = None, numpy_rng: Optional[numpy.random.mtrand.RandomState] = None)
Bases: \fI\%pandemic_simulator.environment.location.base.BaseLocation\fP
.sp
Class that implements a cemetery location.
.INDENT 7.0
.TP
.B location_rule_type
alias of \fI\%CemeteryRule\fP
.UNINDENT
.INDENT 7.0
.TP
.B remove_person_from_location(person_id: pandemic_simulator.environment.interfaces.ids.PersonID) -> None
Removes a person with the given ID from the location
.UNINDENT
.INDENT 7.0
.TP
.B update_rules(new_rule: pandemic_simulator.environment.interfaces.location_rules.LocationRule) -> None
Update operating rules based on the given location instruction.
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class pandemic_simulator.environment.location.cemetery.CemeteryRule(contact_rate: Union[pandemic_simulator.environment.interfaces.location_states.ContactRate, Default, NoneType] = None, visitor_time: Union[pandemic_simulator.environment.interfaces.sim_time.SimTimeTuple, Default, NoneType] = None, visitor_capacity: Union[Default, int, NoneType] = None)
Bases: \fBpandemic_simulator.environment.interfaces.location_rules.LocationRule\fP
.UNINDENT
.SS pandemic_simulator.environment.location.home module
.INDENT 0.0
.TP
.B class pandemic_simulator.environment.location.home.Home(registry: pandemic_simulator.environment.interfaces.registry.Registry, name: Optional[str] = None, visitor_capacity: int = \- 1, road_id: Optional[pandemic_simulator.environment.interfaces.ids.LocationID] = None, numpy_rng: Optional[numpy.random.mtrand.RandomState] = None)
Bases: \fI\%pandemic_simulator.environment.location.base.BaseLocation\fP
.sp
Class that implements a standard Home location.
.INDENT 7.0
.TP
.B sync(sim_time: pandemic_simulator.environment.interfaces.sim_time.SimTime) -> None
Sync location time with simulation time.
.INDENT 7.0
.TP
.B Parameters
\fBsim_time\fP \-\- Current simulation time.
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B update_rules(new_rule: pandemic_simulator.environment.interfaces.location_rules.LocationRule) -> None
Update operating rules based on the given location instruction.
.UNINDENT
.UNINDENT
.SS pandemic_simulator.environment.location.hospital module
.INDENT 0.0
.TP
.B class pandemic_simulator.environment.location.hospital.Hospital(registry: pandemic_simulator.environment.interfaces.registry.Registry, name: Optional[str] = None, road_id: Optional[pandemic_simulator.environment.interfaces.ids.LocationID] = None, init_state: Optional[pandemic_simulator.environment.interfaces.location_states.BusinessLocationState] = None, numpy_rng: Optional[numpy.random.mtrand.RandomState] = None)
Bases: \fI\%pandemic_simulator.environment.location.base_business.BusinessBaseLocation\fP
.sp
Class that implements a basic hospital location.
.INDENT 7.0
.TP
.B add_person_to_location(person_id: pandemic_simulator.environment.interfaces.ids.PersonID) -> None
Adds a person with the given ID to the location
.UNINDENT
.INDENT 7.0
.TP
.B is_entry_allowed(person_id: pandemic_simulator.environment.interfaces.ids.PersonID) -> bool
Checks if a person with the given ID is allowed to enter the location at the current time.
.INDENT 7.0
.TP
.B Parameters
\fBperson_id\fP \-\- PersonID instance
.TP
.B Returns
Return True if entry is allowed else False
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B remove_person_from_location(person_id: pandemic_simulator.environment.interfaces.ids.PersonID) -> None
Removes a person with the given ID from the location
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class pandemic_simulator.environment.location.hospital.HospitalState(is_open: bool, visitor_capacity: int = \- 1, contact_rate: pandemic_simulator.environment.interfaces.location_states.ContactRate = ContactRate(min_assignees=1, min_assignees_visitors=1, min_visitors=0, fraction_assignees=0.5, fraction_assignees_visitors=0.0, fraction_visitors=0.0), visitor_time: pandemic_simulator.environment.interfaces.sim_time.SimTimeTuple = SimTimeTuple(hours=0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, week_days=0, 1, 2, 3, 4, 5, 6, days=0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364), open_time: pandemic_simulator.environment.interfaces.sim_time.SimTimeTuple = SimTimeTuple(hours=0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, week_days=0, 1, 2, 3, 4, 5, 6, days=0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364), patient_capacity: int = \- 1)
Bases: \fBpandemic_simulator.environment.interfaces.location_states.BusinessLocationState\fP
.INDENT 7.0
.TP
.B open_time: pandemic_simulator.environment.interfaces.sim_time.SimTimeTuple = SimTimeTuple(hours=(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23), week_days=(0, 1, 2, 3, 4, 5, 6), days=(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364))
.UNINDENT
.INDENT 7.0
.TP
.B patient_capacity: int = \-1
Number of patients allowed to be admitted to the Hospital
.UNINDENT
.INDENT 7.0
.TP
.B patients_in_location: Set[pandemic_simulator.environment.interfaces.ids.PersonID]
A set of ids of patients who are currently in the location. Default is an empty set.
.UNINDENT
.INDENT 7.0
.TP
.B property persons_in_location
Property that returns the set of person ids in the location.
.INDENT 7.0
.TP
.B Returns
ID of the persons in the location.
.UNINDENT
.UNINDENT
.UNINDENT
.SS pandemic_simulator.environment.location.misc_locations module
.INDENT 0.0
.TP
.B class pandemic_simulator.environment.location.misc_locations.HairSalon(registry: pandemic_simulator.environment.interfaces.registry.Registry, name: Optional[str] = None, road_id: Optional[pandemic_simulator.environment.interfaces.ids.LocationID] = None, init_state: Optional[pandemic_simulator.environment.interfaces.location_states.NonEssentialBusinessLocationState] = None, numpy_rng: Optional[numpy.random.mtrand.RandomState] = None)
Bases: \fI\%pandemic_simulator.environment.location.base_business.NonEssentialBusinessBaseLocation\fP
.sp
Implements a hair salon.
.UNINDENT
.SS pandemic_simulator.environment.location.office module
.INDENT 0.0
.TP
.B class pandemic_simulator.environment.location.office.Office(registry: pandemic_simulator.environment.interfaces.registry.Registry, name: Optional[str] = None, road_id: Optional[pandemic_simulator.environment.interfaces.ids.LocationID] = None, init_state: Optional[pandemic_simulator.environment.interfaces.location_states.NonEssentialBusinessLocationState] = None, numpy_rng: Optional[numpy.random.mtrand.RandomState] = None)
Bases: \fI\%pandemic_simulator.environment.location.base_business.AgeRestrictedBusinessBaseLocation\fP
.sp
Implements an office
.UNINDENT
.SS pandemic_simulator.environment.location.recreation module
.INDENT 0.0
.TP
.B class pandemic_simulator.environment.location.recreation.Park(registry: pandemic_simulator.environment.interfaces.registry.Registry, name: Optional[str] = None, road_id: Optional[pandemic_simulator.environment.interfaces.ids.LocationID] = None, init_state: Optional[pandemic_simulator.environment.interfaces.location_states.NonEssentialBusinessLocationState] = None, numpy_rng: Optional[numpy.random.mtrand.RandomState] = None)
Bases: \fI\%pandemic_simulator.environment.location.base_business.NonEssentialBusinessBaseLocation\fP
.sp
Class that implements a simple park.
.INDENT 7.0
.TP
.B assign_person(person_id: pandemic_simulator.environment.interfaces.ids.PersonID) -> None
A person cannot be assigned to a simple park.
.UNINDENT
.UNINDENT
.SS pandemic_simulator.environment.location.road module
.INDENT 0.0
.TP
.B class pandemic_simulator.environment.location.road.Road(registry: pandemic_simulator.environment.interfaces.registry.Registry, name: Optional[str] = None, numpy_rng: Optional[numpy.random.mtrand.RandomState] = None)
Bases: \fI\%pandemic_simulator.environment.location.base.BaseLocation\fP
.sp
Class that implements a road.
.INDENT 7.0
.TP
.B assign_person(person_id: pandemic_simulator.environment.interfaces.ids.PersonID) -> None
Method that assigns a person to the location.
.INDENT 7.0
.TP
.B Parameters
\fBperson_id\fP \-\- PersonID instance
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B is_entry_allowed(person_id: pandemic_simulator.environment.interfaces.ids.PersonID) -> bool
Checks if a person with the given ID is allowed to enter the location at the current time.
.INDENT 7.0
.TP
.B Parameters
\fBperson_id\fP \-\- PersonID instance
.TP
.B Returns
Return True if entry is allowed else False
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B update_rules(new_rule: pandemic_simulator.environment.interfaces.location_rules.LocationRule) -> None
Update operating rules based on the given location instruction.
.UNINDENT
.UNINDENT
.SS pandemic_simulator.environment.location.school module
.INDENT 0.0
.TP
.B class pandemic_simulator.environment.location.school.School(registry: pandemic_simulator.environment.interfaces.registry.Registry, name: Optional[str] = None, road_id: Optional[pandemic_simulator.environment.interfaces.ids.LocationID] = None, init_state: Optional[pandemic_simulator.environment.interfaces.location_states.NonEssentialBusinessLocationState] = None, numpy_rng: Optional[numpy.random.mtrand.RandomState] = None)
Bases: \fI\%pandemic_simulator.environment.location.base_business.AgeRestrictedBusinessBaseLocation\fP
.sp
Implements a school
.UNINDENT
.SS pandemic_simulator.environment.location.store module
.INDENT 0.0
.TP
.B class pandemic_simulator.environment.location.store.GroceryStore(registry: pandemic_simulator.environment.interfaces.registry.Registry, name: Optional[str] = None, road_id: Optional[pandemic_simulator.environment.interfaces.ids.LocationID] = None, init_state: Optional[pandemic_simulator.environment.interfaces.location_states.BusinessLocationState] = None, numpy_rng: Optional[numpy.random.mtrand.RandomState] = None)
Bases: \fI\%pandemic_simulator.environment.location.base_business.EssentialBusinessBaseLocation\fP
.sp
Implements a grocery store location.
.UNINDENT
.INDENT 0.0
.TP
.B class pandemic_simulator.environment.location.store.RetailStore(registry: pandemic_simulator.environment.interfaces.registry.Registry, name: Optional[str] = None, road_id: Optional[pandemic_simulator.environment.interfaces.ids.LocationID] = None, init_state: Optional[pandemic_simulator.environment.interfaces.location_states.NonEssentialBusinessLocationState] = None, numpy_rng: Optional[numpy.random.mtrand.RandomState] = None)
Bases: \fI\%pandemic_simulator.environment.location.base_business.NonEssentialBusinessBaseLocation\fP
.sp
Implements a retail store location.
.UNINDENT
.SS pandemic_simulator.environment.pandemic_testing_strategies package
.SS Submodules
.SS pandemic_simulator.environment.pandemic_testing_strategies.random_testing module
.INDENT 0.0
.TP
.B class pandemic_simulator.environment.pandemic_testing_strategies.random_testing.RandomPandemicTesting(spontaneous_testing_rate: float = 1.0, symp_testing_rate: float = 1.0, critical_testing_rate: float = 1.0, testing_false_positive_rate: float = 0.01, testing_false_negative_rate: float = 0.01, retest_rate: float = 0.033, numpy_rng: Optional[numpy.random.mtrand.RandomState] = None)
Bases: \fBpandemic_simulator.environment.interfaces.pandemic_testing.PandemicTesting\fP
.sp
Implements random pandemic testing based on the specified probabilities.
.INDENT 7.0
.TP
.B admit_person(person_state: pandemic_simulator.environment.interfaces.person.PersonState) -> bool
Return a bool whether to admit a person for testing.
.INDENT 7.0
.TP
.B Parameters
\fBperson_state\fP \-\- Person\(aqs state
.TP
.B Returns
bool
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B test_person(person_state: pandemic_simulator.environment.interfaces.person.PersonState) -> pandemic_simulator.environment.interfaces.pandemic_testing_result.PandemicTestResult
Test the given person and return the test result
:param person_state: Person\(aqs state
:return: PandemicTestResult instance
.UNINDENT
.UNINDENT
.SS pandemic_simulator.environment.person package
.SS Submodules
.SS pandemic_simulator.environment.person.base module
.INDENT 0.0
.TP
.B class pandemic_simulator.environment.person.base.BasePerson(age: int, home: pandemic_simulator.environment.interfaces.ids.LocationID, registry: pandemic_simulator.environment.interfaces.registry.Registry, name: Optional[str] = None, risk: Optional[pandemic_simulator.environment.interfaces.infection_model.Risk] = None, regulation_compliance_prob: float = 1.0, night_hours: pandemic_simulator.environment.interfaces.sim_time.SimTimeTuple = SimTimeTuple(hours=0, 1, 2, 3, 4, 5, 22, 23, week_days=0, 1, 2, 3, 4, 5, 6, days=0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364), init_state: Optional[pandemic_simulator.environment.interfaces.person.PersonState] = None, numpy_rng: Optional[numpy.random.mtrand.RandomState] = None)
Bases: \fBpandemic_simulator.environment.interfaces.person.Person\fP
.sp
Class that partially implements a sim person.
.INDENT 7.0
.TP
.B property assigned_locations
Property that returns a sequence of location ids that the person is assigned to.
.INDENT 7.0
.TP
.B Returns
A collection of LocationIDs
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B property at_home
Return True if the person is at home and False otherwise
.UNINDENT
.INDENT 7.0
.TP
.B enter_location(location_id: pandemic_simulator.environment.interfaces.ids.LocationID) -> bool
Enter a location.
.INDENT 7.0
.TP
.B Parameters
\fBlocation_id\fP \-\- LocationID instance
.TP
.B Returns
True if successful else False
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B property home
Property that returns the person\(aqs home location id.
.INDENT 7.0
.TP
.B Returns
ID of the home location
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B property id
Method that returns the id of the person.
.INDENT 7.0
.TP
.B Returns
ID of the person.
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B receive_regulation(regulation: pandemic_simulator.environment.interfaces.regulation.PandemicRegulation) -> None
Receive a regulation that can potentially update the person\(aqs policy.
.INDENT 7.0
.TP
.B Parameters
\fBregulation\fP \-\- a PandemicRegulation instance
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B reset() -> None
Reset person to its initial state.
.UNINDENT
.INDENT 7.0
.TP
.B property state
Property that returns the current state of the person.
.INDENT 7.0
.TP
.B Returns
Current state of the person.
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B step(sim_time: pandemic_simulator.environment.interfaces.sim_time.SimTime, contact_tracer: Optional[pandemic_simulator.environment.interfaces.contact_tracer.ContactTracer] = None) -> Optional[NewType.<locals>.new_type]
Method that steps through the person\(aqs policy. The step can return a
NoOp to indicate no operation was carried out.
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBsim_time\fP \-\- Current simulation time.
.IP \(bu 2
\fBcontact_tracer\fP \-\- Traces of previous contacts of the person.
.UNINDENT
.TP
.B Returns
Return NoOp if no operation was carried out otherwise None.
.UNINDENT
.UNINDENT
.UNINDENT
.SS pandemic_simulator.environment.person.minor module
.INDENT 0.0
.TP
.B class pandemic_simulator.environment.person.minor.Minor(age: int, home: pandemic_simulator.environment.interfaces.ids.LocationID, school: pandemic_simulator.environment.interfaces.ids.LocationID, registry: pandemic_simulator.environment.interfaces.registry.Registry, school_time: Optional[pandemic_simulator.environment.interfaces.sim_time.SimTimeTuple] = None, outside_school_routines: Sequence[pandemic_simulator.environment.interfaces.person_routine.PersonRoutine] = (), name: Optional[str] = None, risk: Optional[pandemic_simulator.environment.interfaces.infection_model.Risk] = None, night_hours: pandemic_simulator.environment.interfaces.sim_time.SimTimeTuple = SimTimeTuple(hours=0, 1, 2, 3, 4, 5, 22, 23, week_days=0, 1, 2, 3, 4, 5, 6, days=0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364), regulation_compliance_prob: float = 1.0, init_state: Optional[pandemic_simulator.environment.interfaces.person.PersonState] = None, numpy_rng: Optional[numpy.random.mtrand.RandomState] = None)
Bases: \fI\%pandemic_simulator.environment.person.base.BasePerson\fP
.sp
Class that implements a school going minor.
.INDENT 7.0
.TP
.B property assigned_locations
Property that returns a sequence of location ids that the person is assigned to.
.INDENT 7.0
.TP
.B Returns
A collection of LocationIDs
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B property at_school
Return True if the person is at school and False otherwise
.UNINDENT
.INDENT 7.0
.TP
.B property school
.UNINDENT
.INDENT 7.0
.TP
.B step(sim_time: pandemic_simulator.environment.interfaces.sim_time.SimTime, contact_tracer: Optional[pandemic_simulator.environment.interfaces.contact_tracer.ContactTracer] = None) -> Optional[NewType.<locals>.new_type]
Method that steps through the person\(aqs policy. The step can return a
NoOp to indicate no operation was carried out.
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBsim_time\fP \-\- Current simulation time.
.IP \(bu 2
\fBcontact_tracer\fP \-\- Traces of previous contacts of the person.
.UNINDENT
.TP
.B Returns
Return NoOp if no operation was carried out otherwise None.
.UNINDENT
.UNINDENT
.UNINDENT
.SS pandemic_simulator.environment.person.retired module
.INDENT 0.0
.TP
.B class pandemic_simulator.environment.person.retired.Retired(age: int, home: pandemic_simulator.environment.interfaces.ids.LocationID, registry: pandemic_simulator.environment.interfaces.registry.Registry, routines: Sequence[pandemic_simulator.environment.interfaces.person_routine.PersonRoutine] = (), name: Optional[str] = None, risk: Optional[pandemic_simulator.environment.interfaces.infection_model.Risk] = None, night_hours: pandemic_simulator.environment.interfaces.sim_time.SimTimeTuple = SimTimeTuple(hours=0, 1, 2, 3, 4, 5, 22, 23, week_days=0, 1, 2, 3, 4, 5, 6, days=0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364), regulation_compliance_prob: float = 1.0, init_state: Optional[pandemic_simulator.environment.interfaces.person.PersonState] = None, numpy_rng: Optional[numpy.random.mtrand.RandomState] = None)
Bases: \fI\%pandemic_simulator.environment.person.base.BasePerson\fP
.sp
Class that implements a retired person
.INDENT 7.0
.TP
.B step(sim_time: pandemic_simulator.environment.interfaces.sim_time.SimTime, contact_tracer: Optional[pandemic_simulator.environment.interfaces.contact_tracer.ContactTracer] = None) -> Optional[NewType.<locals>.new_type]
Method that steps through the person\(aqs policy. The step can return a
NoOp to indicate no operation was carried out.
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBsim_time\fP \-\- Current simulation time.
.IP \(bu 2
\fBcontact_tracer\fP \-\- Traces of previous contacts of the person.
.UNINDENT
.TP
.B Returns
Return NoOp if no operation was carried out otherwise None.
.UNINDENT
.UNINDENT
.UNINDENT
.SS pandemic_simulator.environment.person.worker module
.INDENT 0.0
.TP
.B class pandemic_simulator.environment.person.worker.Worker(age: int, home: pandemic_simulator.environment.interfaces.ids.LocationID, work: pandemic_simulator.environment.interfaces.ids.LocationID, registry: pandemic_simulator.environment.interfaces.registry.Registry, work_time: Optional[pandemic_simulator.environment.interfaces.sim_time.SimTimeTuple] = None, outside_work_routines: Sequence[pandemic_simulator.environment.interfaces.person_routine.PersonRoutine] = (), name: Optional[str] = None, risk: Optional[pandemic_simulator.environment.interfaces.infection_model.Risk] = None, night_hours: pandemic_simulator.environment.interfaces.sim_time.SimTimeTuple = SimTimeTuple(hours=0, 1, 2, 3, 4, 5, 22, 23, week_days=0, 1, 2, 3, 4, 5, 6, days=0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364), regulation_compliance_prob: float = 1.0, init_state: Optional[pandemic_simulator.environment.interfaces.person.PersonState] = None, numpy_rng: Optional[numpy.random.mtrand.RandomState] = None)
Bases: \fI\%pandemic_simulator.environment.person.base.BasePerson\fP
.sp
Class that implements a basic worker.
.INDENT 7.0
.TP
.B property assigned_locations
Property that returns a sequence of location ids that the person is assigned to.
.INDENT 7.0
.TP
.B Returns
A collection of LocationIDs
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B property at_work
Return True if the person is at work and False otherwise
.UNINDENT
.INDENT 7.0
.TP
.B step(sim_time: pandemic_simulator.environment.interfaces.sim_time.SimTime, contact_tracer: Optional[pandemic_simulator.environment.interfaces.contact_tracer.ContactTracer] = None) -> Optional[NewType.<locals>.new_type]
Method that steps through the person\(aqs policy. The step can return a
NoOp to indicate no operation was carried out.
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBsim_time\fP \-\- Current simulation time.
.IP \(bu 2
\fBcontact_tracer\fP \-\- Traces of previous contacts of the person.
.UNINDENT
.TP
.B Returns
Return NoOp if no operation was carried out otherwise None.
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B property work
.UNINDENT
.UNINDENT
.SS Submodules
.SS pandemic_simulator.environment.city_registry module
.INDENT 0.0
.TP
.B class pandemic_simulator.environment.city_registry.CityRegistry
Bases: \fBpandemic_simulator.environment.interfaces.registry.Registry\fP
.sp
A global registry for all persons and location instances
.INDENT 7.0
.TP
.B clear_quarantined(person_id: pandemic_simulator.environment.interfaces.ids.PersonID) -> None
Clear person\(aqs quarantined information.
.UNINDENT
.INDENT 7.0
.TP
.B get_households(person_id: pandemic_simulator.environment.interfaces.ids.PersonID) -> Set[pandemic_simulator.environment.interfaces.ids.PersonID]
Return person\(aqs households
.UNINDENT
.INDENT 7.0
.TP
.B get_person_home_id(person_id: pandemic_simulator.environment.interfaces.ids.PersonID) -> pandemic_simulator.environment.interfaces.ids.LocationID
Return person\(aqs home id
.UNINDENT
.INDENT 7.0
.TP
.B get_person_infection_summary(person_id: pandemic_simulator.environment.interfaces.ids.PersonID) -> Optional[pandemic_simulator.environment.interfaces.infection_model.InfectionSummary]
Return person\(aqs infection summary
.UNINDENT
.INDENT 7.0
.TP
.B get_person_quarantined_state(person_id: pandemic_simulator.environment.interfaces.ids.PersonID) -> bool
Return person\(aqs quarantined state.
.UNINDENT
.INDENT 7.0
.TP
.B get_person_test_result(person_id: pandemic_simulator.environment.interfaces.ids.PersonID) -> pandemic_simulator.environment.interfaces.pandemic_testing_result.PandemicTestResult
Return person\(aqs test result
.UNINDENT
.INDENT 7.0
.TP
.B get_persons_in_location(location_id: pandemic_simulator.environment.interfaces.ids.LocationID) -> Set[pandemic_simulator.environment.interfaces.ids.PersonID]
Return a list of persons in the given location
.UNINDENT
.INDENT 7.0
.TP
.B location_id_to_type(location_id: pandemic_simulator.environment.interfaces.ids.LocationID) -> Type
Return the type of location with the given ID.
.UNINDENT
.INDENT 7.0
.TP
.B property location_ids
Return a list of registered location ids
.UNINDENT
.INDENT 7.0
.TP
.B location_ids_of_type(location_type: type) -> List[pandemic_simulator.environment.interfaces.ids.LocationID]
Return a list of location ids for the given type of location.
.UNINDENT
.INDENT 7.0
.TP
.B property location_ids_with_social_events
Return a list of location ids where there are active social events.
.UNINDENT
.INDENT 7.0
.TP
.B property person_ids
Return a list of registered person ids
.UNINDENT
.INDENT 7.0
.TP
.B quarantine_person(person_id: pandemic_simulator.environment.interfaces.ids.PersonID) -> None
Mark person to be quarantined.
.UNINDENT
.INDENT 7.0
.TP
.B reassign_locations(person: pandemic_simulator.environment.interfaces.person.Person) -> None
Re\-assign locations for the given person.
.UNINDENT
.INDENT 7.0
.TP
.B register_location(location: pandemic_simulator.environment.interfaces.location.Location) -> None
Register a location instance
.INDENT 7.0
.TP
.B Parameters
\fBlocation\fP \-\- Location instance
.TP
.B Returns

.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B register_person(person: pandemic_simulator.environment.interfaces.person.Person) -> None
Register a person instance
.INDENT 7.0
.TP
.B Parameters
\fBperson\fP \-\- Person instance
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B register_person_entry_in_location(person_id: pandemic_simulator.environment.interfaces.ids.PersonID, location_id: pandemic_simulator.environment.interfaces.ids.LocationID) -> bool
Register a person\(aqs entry in the specified location
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBperson_id\fP \-\- PersonID instance
.IP \(bu 2
\fBlocation_id\fP \-\- LocationID instance
.UNINDENT
.TP
.B Returns
bool to indicate if the registration was successful.
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B update_location_specific_information() -> None
update any location specific information that is accessed by person.
.UNINDENT
.UNINDENT
.SS pandemic_simulator.environment.done module
.INDENT 0.0
.TP
.B class pandemic_simulator.environment.done.DoneFunction(*args: Any, **kwargs: Any)
Bases: \fBobject\fP
.INDENT 7.0
.TP
.B abstract calculate_done(obs: pandemic_simulator.environment.interfaces.pandemic_observation.PandemicObservation, action: int) -> bool
.UNINDENT
.INDENT 7.0
.TP
.B reset() -> None
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class pandemic_simulator.environment.done.DoneFunctionFactory
Bases: \fBobject\fP
.INDENT 7.0
.TP
.B static default(done_function_type: Union[str, pandemic_simulator.environment.done.DoneFunctionType], *args: Any, **kwargs: Any) -> pandemic_simulator.environment.done.DoneFunction
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class pandemic_simulator.environment.done.DoneFunctionType(value)
Bases: \fBenum.Enum\fP
.sp
An enumeration.
.INDENT 7.0
.TP
.B INFECTION_SUMMARY_ABOVE_THRESHOLD = \(aqinfection_summary_above_threshold\(aq
.UNINDENT
.INDENT 7.0
.TP
.B NO_MORE_INFECTIONS = \(aqno_more_infections\(aq
.UNINDENT
.INDENT 7.0
.TP
.B NO_PANDEMIC = \(aqno_pandemic\(aq
.UNINDENT
.INDENT 7.0
.TP
.B static values() -> List[str]
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class pandemic_simulator.environment.done.InfectionSummaryAboveThresholdDone(summary_type: pandemic_simulator.environment.interfaces.infection_model.InfectionSummary, threshold: float, *args: Any, **kwargs: Any)
Bases: \fI\%pandemic_simulator.environment.done.DoneFunction\fP
.sp
Returns True if the infection summary of the given type is above a threshold.
.INDENT 7.0
.TP
.B calculate_done(obs: pandemic_simulator.environment.interfaces.pandemic_observation.PandemicObservation, action: int) -> bool
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class pandemic_simulator.environment.done.NoMoreInfectionsDone(*args: Any, **kwargs: Any)
Bases: \fI\%pandemic_simulator.environment.done.DoneFunction\fP
.sp
Returns True if the number of infected and critical becomes zero and all have recovered.
.INDENT 7.0
.TP
.B calculate_done(obs: pandemic_simulator.environment.interfaces.pandemic_observation.PandemicObservation, action: int) -> bool
.UNINDENT
.INDENT 7.0
.TP
.B reset() -> None
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class pandemic_simulator.environment.done.NoPandemicDone(num_days: int, *args: Any, **kwargs: Any)
Bases: \fI\%pandemic_simulator.environment.done.DoneFunction\fP
.sp
Returns True if the pandemic hasn\(aqt started within the specified number of days.
.INDENT 7.0
.TP
.B calculate_done(obs: pandemic_simulator.environment.interfaces.pandemic_observation.PandemicObservation, action: int) -> bool
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class pandemic_simulator.environment.done.ORDone(done_fns: List[pandemic_simulator.environment.done.DoneFunction], *args: Any, **kwargs: Any)
Bases: \fI\%pandemic_simulator.environment.done.DoneFunction\fP
.sp
Done function that takes logical OR of multiple done functions
.INDENT 7.0
.TP
.B calculate_done(obs: pandemic_simulator.environment.interfaces.pandemic_observation.PandemicObservation, action: int) -> bool
.UNINDENT
.INDENT 7.0
.TP
.B reset() -> None
.UNINDENT
.UNINDENT
.SS pandemic_simulator.environment.job_counselor module
.INDENT 0.0
.TP
.B class pandemic_simulator.environment.job_counselor.JobCounselor(population_params: pandemic_simulator.environment.job_counselor.PopulationParams, registry: pandemic_simulator.environment.city_registry.CityRegistry, numpy_rng: Optional[numpy.random.mtrand.RandomState] = None)
Bases: \fBobject\fP
.INDENT 7.0
.TP
.B next_available_work_id() -> Optional[pandemic_simulator.environment.interfaces.ids.LocationID]
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class pandemic_simulator.environment.job_counselor.LocationParams(num: int, worker_capacity: int = \- 1, visitor_capacity: int = \- 1)
Bases: \fBobject\fP
.INDENT 7.0
.TP
.B num: int
.UNINDENT
.INDENT 7.0
.TP
.B visitor_capacity: int = \-1
.UNINDENT
.INDENT 7.0
.TP
.B worker_capacity: int = \-1
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class pandemic_simulator.environment.job_counselor.PopulationParams(num_persons: int, location_type_to_params: Dict[type, pandemic_simulator.environment.job_counselor.LocationParams], viz_scale: int = 2)
Bases: \fBobject\fP
.INDENT 7.0
.TP
.B location_type_to_params: Dict[type, pandemic_simulator.environment.job_counselor.LocationParams]
.UNINDENT
.INDENT 7.0
.TP
.B num_persons: int
.UNINDENT
.INDENT 7.0
.TP
.B viz_scale: int = 2
.UNINDENT
.UNINDENT
.SS pandemic_simulator.environment.pandemic_env module
.INDENT 0.0
.TP
.B class pandemic_simulator.environment.pandemic_env.PandemicGymEnv(pandemic_sim: pandemic_simulator.environment.pandemic_sim.PandemicSim, stage_to_regulation: Optional[Dict[int, pandemic_simulator.environment.interfaces.regulation.PandemicRegulation]] = None, obs_history_size: int = 1, sim_steps_per_regulation: int = 24, non_essential_business_location_ids: Optional[List[pandemic_simulator.environment.interfaces.ids.LocationID]] = None, reward_fn: Optional[pandemic_simulator.environment.reward.RewardFunction] = None, done_fn: Optional[pandemic_simulator.environment.done.DoneFunction] = None)
Bases: \fBgym.core.Env\fP
.sp
A gym environment interface wrapper for the Pandemic Simulator.
.INDENT 7.0
.TP
.B property last_reward
.UNINDENT
.INDENT 7.0
.TP
.B property observation
.UNINDENT
.INDENT 7.0
.TP
.B render(mode=\(aqhuman\(aq)
Renders the environment.
.sp
The set of supported modes varies per environment. (And some
environments do not support rendering at all.) By convention,
if mode is:
.INDENT 7.0
.IP \(bu 2
human: render to the current display or terminal and
return nothing. Usually for human consumption.
.IP \(bu 2
rgb_array: Return an numpy.ndarray with shape (x, y, 3),
representing RGB values for an x\-by\-y pixel image, suitable
for turning into a video.
.IP \(bu 2
ansi: Return a string (str) or StringIO.StringIO containing a
terminal\-style text representation. The text can include newlines
and ANSI escape sequences (e.g. for colors).
.UNINDENT
.INDENT 7.0
.TP
.B Note:
.INDENT 7.0
.TP
.B Make sure that your class\(aqs metadata \(aqrender.modes\(aq key includes
the list of supported modes. It\(aqs recommended to call super()
in implementations to use the functionality of this method.
.UNINDENT
.TP
.B Args:
mode (str): the mode to render with
.UNINDENT
.sp
Example:
.INDENT 7.0
.TP
.B class MyEnv(Env):
metadata = {\(aqrender.modes\(aq: [\(aqhuman\(aq, \(aqrgb_array\(aq]}
.INDENT 7.0
.TP
.B def render(self, mode=\(aqhuman\(aq):
.INDENT 7.0
.TP
.B if mode == \(aqrgb_array\(aq:
return np.array(...) # return RGB frame suitable for video
.TP
.B elif mode == \(aqhuman\(aq:
\&... # pop up a window and render
.TP
.B else:
super(MyEnv, self).render(mode=mode) # just raise an exception
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B reset() -> pandemic_simulator.environment.interfaces.pandemic_observation.PandemicObservation
Resets the state of the environment and returns an initial observation.
.INDENT 7.0
.TP
.B Returns:
observation (object): the initial observation.
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B step(action: int) -> Tuple[pandemic_simulator.environment.interfaces.pandemic_observation.PandemicObservation, float, bool, Dict]
Run one timestep of the environment\(aqs dynamics. When end of
episode is reached, you are responsible for calling \fIreset()\fP
to reset this environment\(aqs state.
.sp
Accepts an action and returns a tuple (observation, reward, done, info).
.INDENT 7.0
.TP
.B Args:
action (object): an action provided by the agent
.TP
.B Returns:
observation (object): agent\(aqs observation of the current environment
reward (float) : amount of reward returned after previous action
done (bool): whether the episode has ended, in which case further step() calls will return undefined results
info (dict): contains auxiliary diagnostic information (helpful for debugging, and sometimes learning)
.UNINDENT
.UNINDENT
.UNINDENT
.SS pandemic_simulator.environment.pandemic_sim module
.INDENT 0.0
.TP
.B class pandemic_simulator.environment.pandemic_sim.PandemicSim(persons: Sequence[pandemic_simulator.environment.interfaces.person.Person], locations: Sequence[pandemic_simulator.environment.interfaces.location.Location], infection_model: pandemic_simulator.environment.interfaces.infection_model.InfectionModel, pandemic_testing: pandemic_simulator.environment.interfaces.pandemic_testing.PandemicTesting, registry: pandemic_simulator.environment.interfaces.registry.Registry, contact_tracer: Optional[pandemic_simulator.environment.interfaces.contact_tracer.ContactTracer] = None, new_time_slot_interval: pandemic_simulator.environment.interfaces.sim_time.SimTimeInterval = SimTimeInterval(hour=0, day=1, year=0, offset_hour=0, offset_day=0), infection_update_interval: pandemic_simulator.environment.interfaces.sim_time.SimTimeInterval = SimTimeInterval(hour=0, day=1, year=0, offset_hour=0, offset_day=0), infection_threshold: int = 0, numpy_rng: Optional[numpy.random.mtrand.RandomState] = None)
Bases: \fBobject\fP
.sp
Class that implements the pandemic simulator.
.INDENT 7.0
.TP
.B execute_regulation(regulation: pandemic_simulator.environment.interfaces.regulation.PandemicRegulation) -> None
Receive a regulation that updates the simulator dynamics
.INDENT 7.0
.TP
.B Parameters
\fBregulation\fP \-\- a PandemicRegulation instance
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B reset() -> None
.UNINDENT
.INDENT 7.0
.TP
.B property state
Property that returns the current state of the simulator.
.INDENT 7.0
.TP
.B Returns
Current state of the simulator.
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B step() -> None
Method that advances one step through the simulator
.UNINDENT
.UNINDENT
.SS pandemic_simulator.environment.regulation_stages module
.SS pandemic_simulator.environment.reward module
.INDENT 0.0
.TP
.B class pandemic_simulator.environment.reward.InfectionSummaryAboveThresholdReward(summary_type: pandemic_simulator.environment.interfaces.infection_model.InfectionSummary, threshold: float, *args: Any, **kwargs: Any)
Bases: \fI\%pandemic_simulator.environment.reward.RewardFunction\fP
.sp
Returns a negative reward if the infection summary of the given type is above a threshold.
.INDENT 7.0
.TP
.B calculate_reward(prev_obs: pandemic_simulator.environment.interfaces.pandemic_observation.PandemicObservation, action: int, obs: pandemic_simulator.environment.interfaces.pandemic_observation.PandemicObservation) -> float
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class pandemic_simulator.environment.reward.InfectionSummaryAbsoluteReward(summary_type: pandemic_simulator.environment.interfaces.infection_model.InfectionSummary, *args: Any, **kwargs: Any)
Bases: \fI\%pandemic_simulator.environment.reward.RewardFunction\fP
.sp
Returns a negative reward proportional to the absolute value of the given type of infection summary.
.INDENT 7.0
.TP
.B calculate_reward(prev_obs: pandemic_simulator.environment.interfaces.pandemic_observation.PandemicObservation, action: int, obs: pandemic_simulator.environment.interfaces.pandemic_observation.PandemicObservation) -> float
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class pandemic_simulator.environment.reward.InfectionSummaryIncreaseReward(summary_type: pandemic_simulator.environment.interfaces.infection_model.InfectionSummary, *args: Any, **kwargs: Any)
Bases: \fI\%pandemic_simulator.environment.reward.RewardFunction\fP
.sp
Returns a negative reward proportional to the relative increase in the infection summary of the given type.
.INDENT 7.0
.TP
.B calculate_reward(prev_obs: pandemic_simulator.environment.interfaces.pandemic_observation.PandemicObservation, action: int, obs: pandemic_simulator.environment.interfaces.pandemic_observation.PandemicObservation) -> float
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class pandemic_simulator.environment.reward.LowerStageReward(num_stages: int, *args: Any, **kwargs: Any)
Bases: \fI\%pandemic_simulator.environment.reward.RewardFunction\fP
.sp
Returns a positive reward inversely proportional to the regulation stages.
.INDENT 7.0
.TP
.B calculate_reward(prev_obs: pandemic_simulator.environment.interfaces.pandemic_observation.PandemicObservation, action: int, obs: pandemic_simulator.environment.interfaces.pandemic_observation.PandemicObservation) -> float
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class pandemic_simulator.environment.reward.RewardFunction(*args: Any, **kwargs: Any)
Bases: \fBobject\fP
.INDENT 7.0
.TP
.B abstract calculate_reward(prev_obs: pandemic_simulator.environment.interfaces.pandemic_observation.PandemicObservation, action: int, obs: pandemic_simulator.environment.interfaces.pandemic_observation.PandemicObservation) -> float
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class pandemic_simulator.environment.reward.RewardFunctionFactory
Bases: \fBobject\fP
.INDENT 7.0
.TP
.B static default(reward_function_type: Union[str, pandemic_simulator.environment.reward.RewardFunctionType], *args: Any, **kwargs: Any) -> pandemic_simulator.environment.reward.RewardFunction
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class pandemic_simulator.environment.reward.RewardFunctionType(value)
Bases: \fBenum.Enum\fP
.sp
An enumeration.
.INDENT 7.0
.TP
.B INFECTION_SUMMARY_ABOVE_THRESHOLD = \(aqinfection_summary_above_threshold\(aq
.UNINDENT
.INDENT 7.0
.TP
.B INFECTION_SUMMARY_ABSOLUTE = \(aqinfection_summary_absolute\(aq
.UNINDENT
.INDENT 7.0
.TP
.B INFECTION_SUMMARY_INCREASE = \(aqinfection_summary_increase\(aq
.UNINDENT
.INDENT 7.0
.TP
.B LOWER_STAGE = \(aqlower_stage\(aq
.UNINDENT
.INDENT 7.0
.TP
.B SMOOTH_STAGE_CHANGES = \(aqsmooth_stage_changes\(aq
.UNINDENT
.INDENT 7.0
.TP
.B UNLOCKED_BUSINESS_LOCATIONS = \(aqunlocked_business_locations\(aq
.UNINDENT
.INDENT 7.0
.TP
.B static values() -> List[str]
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class pandemic_simulator.environment.reward.SmoothStageChangesReward(num_stages: int, *args: Any, **kwargs: Any)
Bases: \fI\%pandemic_simulator.environment.reward.RewardFunction\fP
.INDENT 7.0
.TP
.B calculate_reward(prev_obs: pandemic_simulator.environment.interfaces.pandemic_observation.PandemicObservation, action: int, obs: pandemic_simulator.environment.interfaces.pandemic_observation.PandemicObservation) -> float
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class pandemic_simulator.environment.reward.SumReward(reward_fns: List[pandemic_simulator.environment.reward.RewardFunction], weights: Optional[List[float]] = None, *args: Any, **kwargs: Any)
Bases: \fI\%pandemic_simulator.environment.reward.RewardFunction\fP
.sp
Reward function that sums the values of multiple reward functions.
.INDENT 7.0
.TP
.B calculate_reward(prev_obs: pandemic_simulator.environment.interfaces.pandemic_observation.PandemicObservation, action: int, obs: pandemic_simulator.environment.interfaces.pandemic_observation.PandemicObservation) -> float
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class pandemic_simulator.environment.reward.UnlockedBusinessLocationsReward(obs_indices: Optional[Sequence[int]] = None, *args: Any, **kwargs: Any)
Bases: \fI\%pandemic_simulator.environment.reward.RewardFunction\fP
.sp
Returns a positive reward proportional to the number of unlocked business locations.
.INDENT 7.0
.TP
.B calculate_reward(prev_obs: pandemic_simulator.environment.interfaces.pandemic_observation.PandemicObservation, action: int, obs: pandemic_simulator.environment.interfaces.pandemic_observation.PandemicObservation) -> float
.UNINDENT
.UNINDENT
.SS pandemic_simulator.environment.simulator_opts module
.INDENT 0.0
.TP
.B class pandemic_simulator.environment.simulator_opts.PandemicSimNonCLIOpts(population_params: pandemic_simulator.environment.job_counselor.PopulationParams)
Bases: \fBobject\fP
.INDENT 7.0
.TP
.B population_params: pandemic_simulator.environment.job_counselor.PopulationParams
Population params
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class pandemic_simulator.environment.simulator_opts.PandemicSimOpts(infection_spread_rate_mean: float = 0.03, infection_spread_rate_sigma: float = 0.01, infection_threshold: int = 10, spontaneous_testing_rate: float = 0.02, symp_testing_rate: float = 0.3, critical_testing_rate: float = 1.0, testing_false_positive_rate: float = 0.001, testing_false_negative_rate: float = 0.01, retest_rate: float = 0.033, sim_steps_per_regulation: int = 24, use_contact_tracer: bool = False, contact_tracer_history_size: int = 5, regulation_compliance_prob: float = 0.99)
Bases: \fBobject\fP
.sp
Params for the bounded\-gaussian infection spread rate distribution
.INDENT 7.0
.TP
.B contact_tracer_history_size: int = 5
Contact tracer history size. Only used if use_contact_tracer is True.
.UNINDENT
.INDENT 7.0
.TP
.B critical_testing_rate: float = 1.0
Probability of people in critical condition getting tested
.UNINDENT
.INDENT 7.0
.TP
.B infection_spread_rate_mean: float = 0.03
.UNINDENT
.INDENT 7.0
.TP
.B infection_spread_rate_sigma: float = 0.01
.UNINDENT
.INDENT 7.0
.TP
.B infection_threshold: int = 10
.UNINDENT
.INDENT 7.0
.TP
.B regulation_compliance_prob: float = 0.99
The probability that a person complies to regulation every step
.UNINDENT
.INDENT 7.0
.TP
.B retest_rate: float = 0.033
Probability of a previously tested\-positive person to get retested again
.UNINDENT
.INDENT 7.0
.TP
.B sim_steps_per_regulation: int = 24
Number of simulation steps for each regulation
.UNINDENT
.INDENT 7.0
.TP
.B spontaneous_testing_rate: float = 0.02
Probability of a person getting tested independent of symptoms shown
.UNINDENT
.INDENT 7.0
.TP
.B symp_testing_rate: float = 0.3
Probability of symptomatic people getting tested
.UNINDENT
.INDENT 7.0
.TP
.B testing_false_negative_rate: float = 0.01
False negative rate
.UNINDENT
.INDENT 7.0
.TP
.B testing_false_positive_rate: float = 0.001
False positive rate
.UNINDENT
.INDENT 7.0
.TP
.B use_contact_tracer: bool = False
Set to true to use contact tracer in the simulator
.UNINDENT
.UNINDENT
.SS pandemic_simulator.script_helpers package
.SS Submodules
.SS pandemic_simulator.script_helpers.evaluation module
.INDENT 0.0
.TP
.B class pandemic_simulator.script_helpers.evaluation.EvaluationOpts(num_seeds: int, spread_rates: Union[Sequence[float], NoneType] = None, pandemic_test_rate_scales: Union[Sequence[float], NoneType] = None, avoid_gathering_sizes: Union[Sequence[int], NoneType] = None, social_distancing: Union[Sequence[float], NoneType] = None, population_sizes: Union[Sequence[int], NoneType] = None, strategies: Union[Sequence[Union[int, Sequence[pandemic_simulator.data.interfaces.data_loader.StageSchedule]]], NoneType] = None, pandemic_regulations: Union[List[pandemic_simulator.environment.interfaces.regulation.PandemicRegulation], NoneType] = None, sim_opts: Union[List[pandemic_simulator.environment.simulator_opts.PandemicSimOpts], NoneType] = None, default_sim_non_cli_opts: pandemic_simulator.environment.simulator_opts.PandemicSimNonCLIOpts = PandemicSimNonCLIOpts(population_params=PopulationParams(num_persons=1000, location_type_to_params={<class \(aqpandemic_simulator.environment.location.home.Home\(aq>: LocationParams(num=300, worker_capacity=\-1, visitor_capacity=\-1), <class \(aqpandemic_simulator.environment.location.store.GroceryStore\(aq>: LocationParams(num=4, worker_capacity=5, visitor_capacity=30), <class \(aqpandemic_simulator.environment.location.office.Office\(aq>: LocationParams(num=5, worker_capacity=200, visitor_capacity=0), <class \(aqpandemic_simulator.environment.location.school.School\(aq>: LocationParams(num=1, worker_capacity=40, visitor_capacity=300), <class \(aqpandemic_simulator.environment.location.hospital.Hospital\(aq>: LocationParams(num=1, worker_capacity=30, visitor_capacity=10), <class \(aqpandemic_simulator.environment.location.store.RetailStore\(aq>: LocationParams(num=4, worker_capacity=5, visitor_capacity=30), <class \(aqpandemic_simulator.environment.location.misc_locations.HairSalon\(aq>: LocationParams(num=4, worker_capacity=3, visitor_capacity=5)}, viz_scale=3)), enable_warm_up: bool = False, max_episode_length: int = 120, data_saver_path: pathlib.Path = PosixPath(\(aq../results\(aq), render_runs: bool = False)
Bases: \fBobject\fP
.INDENT 7.0
.TP
.B avoid_gathering_sizes: Optional[Sequence[int]] = None
.UNINDENT
.INDENT 7.0
.TP
.B data_filename: str
.UNINDENT
.INDENT 7.0
.TP
.B data_saver_path: pathlib.Path = PosixPath(\(aq../results\(aq)
.UNINDENT
.INDENT 7.0
.TP
.B default_sim_non_cli_opts: pandemic_simulator.environment.simulator_opts.PandemicSimNonCLIOpts = PandemicSimNonCLIOpts(population_params=PopulationParams(num_persons=1000, location_type_to_params={<class \(aqpandemic_simulator.environment.location.home.Home\(aq>: LocationParams(num=300, worker_capacity=\-1, visitor_capacity=\-1), <class \(aqpandemic_simulator.environment.location.store.GroceryStore\(aq>: LocationParams(num=4, worker_capacity=5, visitor_capacity=30), <class \(aqpandemic_simulator.environment.location.office.Office\(aq>: LocationParams(num=5, worker_capacity=200, visitor_capacity=0), <class \(aqpandemic_simulator.environment.location.school.School\(aq>: LocationParams(num=1, worker_capacity=40, visitor_capacity=300), <class \(aqpandemic_simulator.environment.location.hospital.Hospital\(aq>: LocationParams(num=1, worker_capacity=30, visitor_capacity=10), <class \(aqpandemic_simulator.environment.location.store.RetailStore\(aq>: LocationParams(num=4, worker_capacity=5, visitor_capacity=30), <class \(aqpandemic_simulator.environment.location.misc_locations.HairSalon\(aq>: LocationParams(num=4, worker_capacity=3, visitor_capacity=5)}, viz_scale=3))
.UNINDENT
.INDENT 7.0
.TP
.B enable_warm_up: bool = False
.UNINDENT
.INDENT 7.0
.TP
.B max_episode_length: int = 120
.UNINDENT
.INDENT 7.0
.TP
.B num_seeds: int
.UNINDENT
.INDENT 7.0
.TP
.B pandemic_regulations: Optional[List[pandemic_simulator.environment.interfaces.regulation.PandemicRegulation]] = None
.UNINDENT
.INDENT 7.0
.TP
.B pandemic_test_rate_scales: Optional[Sequence[float]] = None
.UNINDENT
.INDENT 7.0
.TP
.B population_sizes: Optional[Sequence[int]] = None
.UNINDENT
.INDENT 7.0
.TP
.B render_runs: bool = False
.UNINDENT
.INDENT 7.0
.TP
.B sim_opts: Optional[List[pandemic_simulator.environment.simulator_opts.PandemicSimOpts]] = None
.UNINDENT
.INDENT 7.0
.TP
.B social_distancing: Optional[Sequence[float]] = None
.UNINDENT
.INDENT 7.0
.TP
.B spread_rates: Optional[Sequence[float]] = None
.UNINDENT
.INDENT 7.0
.TP
.B strategies: Optional[Sequence[Union[int, Sequence[pandemic_simulator.data.interfaces.data_loader.StageSchedule]]]] = None
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B pandemic_simulator.script_helpers.evaluation.evaluate_location_contact_rates(exp_name: str, eval_opts: pandemic_simulator.script_helpers.evaluation.EvaluationOpts)
.UNINDENT
.INDENT 0.0
.TP
.B pandemic_simulator.script_helpers.evaluation.evaluate_population_sizes(exp_name: str, eval_opts: pandemic_simulator.script_helpers.evaluation.EvaluationOpts)
.UNINDENT
.INDENT 0.0
.TP
.B pandemic_simulator.script_helpers.evaluation.evaluate_social_gatherings(exp_name: str, eval_opts: pandemic_simulator.script_helpers.evaluation.EvaluationOpts)
.UNINDENT
.INDENT 0.0
.TP
.B pandemic_simulator.script_helpers.evaluation.evaluate_spread_rates(exp_name: str, eval_opts: pandemic_simulator.script_helpers.evaluation.EvaluationOpts)
.UNINDENT
.INDENT 0.0
.TP
.B pandemic_simulator.script_helpers.evaluation.evaluate_strategies(exp_name: str, eval_opts: pandemic_simulator.script_helpers.evaluation.EvaluationOpts)
.UNINDENT
.INDENT 0.0
.TP
.B pandemic_simulator.script_helpers.evaluation.evaluate_testing_rates(exp_name: str, eval_opts: pandemic_simulator.script_helpers.evaluation.EvaluationOpts)
.UNINDENT
.SS pandemic_simulator.script_helpers.experiments module
.INDENT 0.0
.TP
.B pandemic_simulator.script_helpers.experiments.experiment_main(exp_id: int, sim_opts: pandemic_simulator.environment.simulator_opts.PandemicSimOpts, sim_non_cli_opts: pandemic_simulator.environment.simulator_opts.PandemicSimNonCLIOpts, data_saver: pandemic_simulator.data.interfaces.data_saver.ExperimentDataSaver, pandemic_regulations: Optional[List[pandemic_simulator.environment.interfaces.regulation.PandemicRegulation]] = None, stages_to_execute: Union[int, Sequence[pandemic_simulator.data.interfaces.data_loader.StageSchedule]] = 0, enable_warm_up: bool = False, max_episode_length: int = 120, num_random_seeds: int = 5) -> None
A helper that runs multi\-seeded experiments and records data.
.UNINDENT
.INDENT 0.0
.TP
.B pandemic_simulator.script_helpers.experiments.seeded_experiment_main(exp_id: int, sim_opts: pandemic_simulator.environment.simulator_opts.PandemicSimOpts, sim_non_cli_opts: pandemic_simulator.environment.simulator_opts.PandemicSimNonCLIOpts, data_saver: pandemic_simulator.data.interfaces.data_saver.ExperimentDataSaver, pandemic_regulations: Optional[List[pandemic_simulator.environment.interfaces.regulation.PandemicRegulation]] = None, stages_to_execute: Union[int, Sequence[pandemic_simulator.data.interfaces.data_loader.StageSchedule]] = 0, enable_warm_up: bool = False, max_episode_length: int = 120, random_seed: int = 0) -> bool
A helper that runs an experiment with the given seed and records data
.UNINDENT
.SS pandemic_simulator.script_helpers.locations module
.INDENT 0.0
.TP
.B pandemic_simulator.script_helpers.locations.make_standard_locations(population_params: pandemic_simulator.environment.job_counselor.PopulationParams, registry: pandemic_simulator.environment.city_registry.CityRegistry, numpy_rng: Optional[numpy.random.mtrand.RandomState] = None) -> List[pandemic_simulator.environment.interfaces.location.Location]
.UNINDENT
.SS pandemic_simulator.script_helpers.person_routines module
.INDENT 0.0
.TP
.B pandemic_simulator.script_helpers.person_routines.get_adult_routines(person_type: Type, home_id: pandemic_simulator.environment.interfaces.ids.LocationID, registry: pandemic_simulator.environment.interfaces.registry.Registry, numpy_rng: Optional[numpy.random.mtrand.RandomState] = None) -> Sequence[pandemic_simulator.environment.interfaces.person_routine.PersonRoutine]
.UNINDENT
.INDENT 0.0
.TP
.B pandemic_simulator.script_helpers.person_routines.get_minor_routines(home_id: pandemic_simulator.environment.interfaces.ids.LocationID, registry: pandemic_simulator.environment.interfaces.registry.Registry, numpy_rng: Optional[numpy.random.mtrand.RandomState] = None) -> Sequence[pandemic_simulator.environment.interfaces.person_routine.PersonRoutine]
.UNINDENT
.SS pandemic_simulator.script_helpers.plot_helpers module
.INDENT 0.0
.TP
.B pandemic_simulator.script_helpers.plot_helpers.make_evaluation_plots(exp_name: str, param_labels: Sequence[str], bar_plot_xlabel: str, data_saver_path: pathlib.Path = PosixPath(\(aq../results\(aq), sim_non_cli_opts: Optional[pandemic_simulator.environment.simulator_opts.PandemicSimNonCLIOpts] = None, max_hospital_capacities: Optional[List[int]] = None, show_summary_plots: bool = True, show_cumulative_reward: bool = False, show_time_to_peak: bool = True, show_pandemic_duration: bool = True, show_stage_trials: bool = False, annotate_stages: Union[bool, Sequence[bool]] = False, figsize: Optional[Tuple[int, int]] = None)
.UNINDENT
.INDENT 0.0
.TP
.B pandemic_simulator.script_helpers.plot_helpers.make_evaluation_plots_from_data(data: Sequence[pandemic_simulator.data.interfaces.data_loader.ExperimentResult], exp_name: str, param_labels: Sequence[str], bar_plot_xlabel: str, fig_save_path: pathlib.Path = PosixPath(\(aq../results/plots\(aq), sim_non_cli_opts: Optional[pandemic_simulator.environment.simulator_opts.PandemicSimNonCLIOpts] = None, max_hospital_capacities: Optional[List[int]] = None, show_summary_plots: bool = True, show_cumulative_reward: bool = False, show_time_to_peak: bool = True, show_pandemic_duration: bool = True, show_stage_trials: bool = False, annotate_stages: Union[bool, Sequence[bool]] = False, figsize: Optional[Tuple[int, int]] = None)
.UNINDENT
.SS pandemic_simulator.script_helpers.population module
.INDENT 0.0
.TP
.B pandemic_simulator.script_helpers.population.make_us_age_population(population_params: pandemic_simulator.environment.job_counselor.PopulationParams, registry: pandemic_simulator.environment.city_registry.CityRegistry, regulation_compliance_prob: float = 1.0, numpy_rng: Optional[numpy.random.mtrand.RandomState] = None) -> List[pandemic_simulator.environment.interfaces.person.Person]
.UNINDENT
.SS pandemic_simulator.script_helpers.population_params module
.SS pandemic_simulator.script_helpers.setup_sim_env module
.INDENT 0.0
.TP
.B pandemic_simulator.script_helpers.setup_sim_env.make_gym_env(sim_opts: pandemic_simulator.environment.simulator_opts.PandemicSimOpts, sim_non_cli_opts: pandemic_simulator.environment.simulator_opts.PandemicSimNonCLIOpts, pandemic_regulations: Optional[List[pandemic_simulator.environment.interfaces.regulation.PandemicRegulation]] = None, city_registry: Optional[pandemic_simulator.environment.city_registry.CityRegistry] = None, done_fn: Optional[pandemic_simulator.environment.done.DoneFunction] = None, numpy_rng: Optional[numpy.random.mtrand.RandomState] = None) -> pandemic_simulator.environment.pandemic_env.PandemicGymEnv
A helper that sets up pandemic_simulator gym env
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBsim_opts\fP \-\- Simulator options (that can be potentially passed as command line args)
.IP \(bu 2
\fBsim_non_cli_opts\fP \-\- Simulator options that cannot be passed as command line args
.IP \(bu 2
\fBpandemic_regulations\fP \-\- A list of pandemic regulations to use. If None, austin_regulations are used.
.IP \(bu 2
\fBcity_registry\fP \-\- optional city registry (if None, one is created and used)
.IP \(bu 2
\fBdone_fn\fP \-\- optional done fns for the env
.IP \(bu 2
\fBnumpy_rng\fP \-\- rng
.UNINDENT
.TP
.B Returns
PandemicGymEnv instance
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B pandemic_simulator.script_helpers.setup_sim_env.make_sim(sim_opts: pandemic_simulator.environment.simulator_opts.PandemicSimOpts, sim_non_cli_opts: pandemic_simulator.environment.simulator_opts.PandemicSimNonCLIOpts, city_registry: Optional[pandemic_simulator.environment.city_registry.CityRegistry] = None, numpy_rng: Optional[numpy.random.mtrand.RandomState] = None) -> pandemic_simulator.environment.pandemic_sim.PandemicSim
A helper that sets up pandemic_simulator simulator
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBsim_opts\fP \-\- Simulator options (that can be potentially passed as command line args)
.IP \(bu 2
\fBsim_non_cli_opts\fP \-\- Simulator options that cannot be passed as command line args
.IP \(bu 2
\fBcity_registry\fP \-\- optional city registry (if None, one is created and used)
.IP \(bu 2
\fBnumpy_rng\fP \-\- rng
.UNINDENT
.TP
.B Returns
PandemicSim instance
.UNINDENT
.UNINDENT
.SS pandemic_simulator.viz package
.SS Submodules
.SS pandemic_simulator.viz.graph_viz module
.INDENT 0.0
.TP
.B class pandemic_simulator.viz.graph_viz.GraphViz(sim: pandemic_simulator.environment.pandemic_sim.PandemicSim, num_stages: int = 5, days_per_interval: int = 7)
Bases: \fI\%pandemic_simulator.viz.pandemic_viz.PandemicViz\fP
.sp
Pandemic19 reinforcement learning matplotlib visualization
.INDENT 7.0
.TP
.B plot() -> None
Make plots
.UNINDENT
.INDENT 7.0
.TP
.B record(data: Any, **kwargs: Any) -> None
Record data to internals for plotting.
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBdata\fP \-\- 
.IP \(bu 2
\fBkwargs\fP \-\- other optional keyword args
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.SS pandemic_simulator.viz.mplab_evaluation module
.INDENT 0.0
.TP
.B pandemic_simulator.viz.mplab_evaluation.get_stage_strategy(stage_data: numpy.ndarray) -> Sequence[pandemic_simulator.data.interfaces.data_loader.StageSchedule]
.UNINDENT
.INDENT 0.0
.TP
.B pandemic_simulator.viz.mplab_evaluation.plot_annotate_stages(exp_result: pandemic_simulator.data.interfaces.data_loader.ExperimentResult, ax: matplotlib.axes._axes.Axes) -> None
.UNINDENT
.INDENT 0.0
.TP
.B pandemic_simulator.viz.mplab_evaluation.plot_critical_summary(exp_result: pandemic_simulator.data.interfaces.data_loader.ExperimentResult, max_hospitals_capacity: int, show_variance: bool = True, annotate_stages: bool = False, ax: Optional[matplotlib.axes._axes.Axes] = None) -> None
Plot critical summary
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBexp_result\fP \-\- ExperimentResult instance
.IP \(bu 2
\fBmax_hospitals_capacity\fP \-\- max hospitals capacity
.IP \(bu 2
\fBshow_variance\fP \-\- set to True to show variance along n\-dim
.IP \(bu 2
\fBannotate_stages\fP \-\- set to True to show annotations regarding stages
.IP \(bu 2
\fBax\fP \-\- figure axis handle
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B pandemic_simulator.viz.mplab_evaluation.plot_cumulative_reward(exp_result: pandemic_simulator.data.interfaces.data_loader.ExperimentResult, show_variance: bool = True, annotate_stages: bool = False, ax: Optional[matplotlib.axes._axes.Axes] = None) -> None
Plot cumulative reward
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBexp_result\fP \-\- ExperimentResult instance
.IP \(bu 2
\fBshow_variance\fP \-\- set to True to show variance along n\-dim
.IP \(bu 2
\fBannotate_stages\fP \-\- set to True to add stage annotation
.IP \(bu 2
\fBax\fP \-\- figure axis handle
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B pandemic_simulator.viz.mplab_evaluation.plot_deaths_per_day_summary(exp_result: pandemic_simulator.data.interfaces.data_loader.ExperimentResult, show_variance: bool = True, annotate_stages: bool = False, ax: Optional[matplotlib.axes._axes.Axes] = None) -> None
Plot deaths per day
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBexp_result\fP \-\- ExperimentResult instance
.IP \(bu 2
\fBshow_variance\fP \-\- set to True to show variance along n\-dim
.IP \(bu 2
\fBannotate_stages\fP \-\- set to True to show annotations regarding stages
.IP \(bu 2
\fBax\fP \-\- figure axis handle
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B pandemic_simulator.viz.mplab_evaluation.plot_global_infection_summary(exp_result: pandemic_simulator.data.interfaces.data_loader.ExperimentResult, testing_summary: bool = False, show_variance: bool = True, annotate_stages: bool = False, ax: Optional[matplotlib.axes._axes.Axes] = None) -> None
Plot global infection summary
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBexp_result\fP \-\- ExperimentResult instance
.IP \(bu 2
\fBtesting_summary\fP \-\- set to True to display testing summary
.IP \(bu 2
\fBshow_variance\fP \-\- set to True to show variance along n\-dim
.IP \(bu 2
\fBannotate_stages\fP \-\- set to True to show annotations regarding stages
.IP \(bu 2
\fBax\fP \-\- figure axis handle
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B pandemic_simulator.viz.mplab_evaluation.plot_multi_params_summary(exp_results: Sequence[pandemic_simulator.data.interfaces.data_loader.ExperimentResult], param_labels: Sequence[str], max_hospitals_capacities: Sequence[int], show_testing_diff_plot: bool = False, show_time_to_peak: bool = True, show_cumulative_reward_plot: bool = False, show_pandemic_duration: bool = True, xlabel: str = \(aq\(aq, axs: Optional[Sequence[matplotlib.axes._axes.Axes]] = None) -> None
Plot multi params summary as bars
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBexp_results\fP \-\- A sequence of ExperimentResult instances, one for each param
.IP \(bu 2
\fBparam_labels\fP \-\- A sequence of param labels
.IP \(bu 2
\fBmax_hospitals_capacities\fP \-\- A sequence of max hospital capacities for each exp result
.IP \(bu 2
\fBshow_testing_diff_plot\fP \-\- set to True to add a bar to denote the norm diff of testing summary from
true infection summary
.IP \(bu 2
\fBshow_time_to_peak\fP \-\- set to True to add a bar to show time to peak for infection, critical and deaths.
.IP \(bu 2
\fBshow_cumulative_reward_plot\fP \-\- set to True to add a bar plot for the cumulative rewards
.IP \(bu 2
\fBshow_pandemic_duration\fP \-\- set to True to add a bar plot showing pandemic duration
.IP \(bu 2
\fBxlabel\fP \-\- xlabel for all plots
.IP \(bu 2
\fBaxs\fP \-\- A sequence of figure axis handles
.UNINDENT
.UNINDENT
.UNINDENT
.SS pandemic_simulator.viz.mplib_viz module
.INDENT 0.0
.TP
.B class pandemic_simulator.viz.mplib_viz.MatplotLibViz(num_persons: int, hospital_params: pandemic_simulator.environment.job_counselor.LocationParams, num_stages: int, show_reward: bool = False, show_stages: bool = True)
Bases: \fI\%pandemic_simulator.viz.pandemic_viz.PandemicViz\fP
.sp
Pandemic19 reinforcement learning matplotlib visualization
.INDENT 7.0
.TP
.B plot() -> None
Make plots
.UNINDENT
.INDENT 7.0
.TP
.B record(data: Any, **kwargs: Any) -> None
Record data to internals for plotting.
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBdata\fP \-\- 
.IP \(bu 2
\fBkwargs\fP \-\- other optional keyword args
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.SS pandemic_simulator.viz.pandemic_viz module
.INDENT 0.0
.TP
.B class pandemic_simulator.viz.pandemic_viz.PandemicViz
Bases: \fBabc.ABC\fP
.sp
An interface for Pandemic19 visualization
.INDENT 7.0
.TP
.B plot() -> None
Make plots
.UNINDENT
.INDENT 7.0
.TP
.B abstract record(data: Any, **kwargs: Any) -> None
Record data to internals for plotting.
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBdata\fP \-\- 
.IP \(bu 2
\fBkwargs\fP \-\- other optional keyword args
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.SS Submodules
.SS pandemic_simulator.utils module
.INDENT 0.0
.TP
.B pandemic_simulator.utils.abstract_class_property() -> _T
.UNINDENT
.INDENT 0.0
.TP
.B pandemic_simulator.utils.checked_cast(type: Type[_T], obj: Any) -> _T
Method for executing a safe cast in python
.UNINDENT
.INDENT 0.0
.TP
.B pandemic_simulator.utils.required() -> _T
.UNINDENT
.INDENT 0.0
.TP
.B pandemic_simulator.utils.shallow_asdict(x: Any) -> Dict[str, Any]
.UNINDENT
.SH AUTHOR
Varun Kompella, Roberto Capobianco, Stacy Jong, Jonathan Browne, Spencer Fox, Lauren Meyers, Peter Wurman, Peter Stone
.SH COPYRIGHT
2020, Sony AI
.\" Generated by docutils manpage writer.
.
